<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>维他入我心</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wtrwx.top/"/>
  <updated>2020-05-10T09:36:38.436Z</updated>
  <id>https://wtrwx.top/</id>
  
  <author>
    <name>维他入我心</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java代码精简之道</title>
    <link href="https://wtrwx.top/20200510/java-code-streamlining.html"/>
    <id>https://wtrwx.top/20200510/java-code-streamlining.html</id>
    <published>2020-05-10T09:19:11.000Z</published>
    <updated>2020-05-10T09:36:38.436Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:36:49 GMT+0800 (中国标准时间) --><blockquote><p>以下文章来源于阿里巴巴中间件 ，作者常意</p></blockquote><p>作者 | 常意</p><p>来源 | 阿里巴巴中间件（ID：Aliware_2018）</p><p>古语有云：</p><blockquote><p>道为术之灵，术为道之体；以道统术，以术得道。</p></blockquote><p>其中：“道”指“规律、道理、理论”，“术”指“方法、技巧、技术”。意思是：“道”是“术”的灵魂，“术”是“道”的肉体；可以用“道”来统管“术”，也可以从“术”中获得“道”。</p><p>在拜读大佬“孤尽”的文章《Code Review是苦涩但有意思的修行》时，感受最深的一句话就是：“优质的代码一定是少即是多的精兵原则”，这就是大佬的代码精简之“道”。</p><p>工匠追求“术”到极致，其实就是在寻“道”，且离悟“道”也就不远了，亦或是已经得道，这就是“工匠精神”——一种追求“以术得道”的精神。如果一个工匠只满足于“术”，不能追求“术”到极致去悟“道”，那只是一个靠“术”养家糊口的工匠而已。作者根据多年来的实践探索，总结了大量的 Java 代码精简之“术”，试图阐述出心中的 Java 代码精简之“道”。</p><h2 id="利用语法"><a class="markdownIt-Anchor" href="#利用语法"></a> <strong>利用语法</strong></h2><h3 id="11利用三元表达式"><a class="markdownIt-Anchor" href="#11利用三元表达式"></a> <strong>1.1.利用三元表达式</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java">String title;<span class="hljs-keyword">if</span> (isMember(phone)) {    title = <span class="hljs-string">"会员"</span>;} <span class="hljs-keyword">else</span> {    title = <span class="hljs-string">"游客"</span>;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">String title = isMember(phone) ? <span class="hljs-string">"会员"</span> : <span class="hljs-string">"游客"</span>;</code></pre><p>注意：对于包装类型的算术计算，需要注意避免拆包时的空指针问题。</p><h3 id="12利用-for-each-语句"><a class="markdownIt-Anchor" href="#12利用-for-each-语句"></a> <strong>1.2.利用 for-each 语句</strong></h3><p>从 Java 5 起，提供了 for-each 循环，简化了数组和集合的循环遍历。 for-each 循环允许你无需保持传统 for 循环中的索引就可以遍历数组，或在使用迭代器时无需在 while 循环中调用 hasNext 方法和 next 方法就可以遍历集合。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">double</span>[] values = ...;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; values.length; i++) {    <span class="hljs-keyword">double</span> value = values[i];    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理value</span>}List&lt;Double&gt; valueList = ...;Iterator&lt;Double&gt; iterator = valueList.iterator();<span class="hljs-keyword">while</span> (iterator.hasNext()) {    Double value = iterator.next();    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理value</span>}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">double</span>[] values = ...;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">double</span> value : values) {    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理value</span>}List&lt;Double&gt; valueList = ...;<span class="hljs-keyword">for</span>(Double value : valueList) {    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理value</span>}</code></pre><h3 id="13利用-try-with-resource-语句"><a class="markdownIt-Anchor" href="#13利用-try-with-resource-语句"></a> <strong>1.3.利用 try-with-resource 语句</strong></h3><p>所有实现 Closeable 接口的“资源”，均可采用 try-with-resource 进行简化。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java">BufferedReader reader = <span class="hljs-keyword">null</span>;<span class="hljs-keyword">try</span> {    reader = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-keyword">new</span> FileReader(<span class="hljs-string">"cities.csv"</span>));    String line;    <span class="hljs-keyword">while</span> ((line = reader.readLine()) != <span class="hljs-keyword">null</span>) {        <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理line</span>    }} <span class="hljs-keyword">catch</span> (IOException e) {    log.error(<span class="hljs-string">"读取文件异常"</span>, e);} <span class="hljs-keyword">finally</span> {    <span class="hljs-keyword">if</span> (reader != <span class="hljs-keyword">null</span>) {        <span class="hljs-keyword">try</span> {            reader.close();        } <span class="hljs-keyword">catch</span> (IOException e) {            log.error(<span class="hljs-string">"关闭文件异常"</span>, e);        }    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">try</span> (BufferedReader reader = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-keyword">new</span> FileReader(<span class="hljs-string">"test.txt"</span>))) {    String line;    <span class="hljs-keyword">while</span> ((line = reader.readLine()) != <span class="hljs-keyword">null</span>) {        <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理line</span>    }} <span class="hljs-keyword">catch</span> (IOException e) {    log.error(<span class="hljs-string">"读取文件异常"</span>, e);}</code></pre><h3 id="14利用-return-关键字"><a class="markdownIt-Anchor" href="#14利用-return-关键字"></a> <strong>1.4.利用 return 关键字</strong></h3><p>利用 return 关键字，可以提前函数返回，避免定义中间变量。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">hasSuper</span><span class="hljs-params">(@NonNull List&lt;UserDO&gt; userList)</span> </span>{    <span class="hljs-keyword">boolean</span> hasSuper = <span class="hljs-keyword">false</span>;    <span class="hljs-keyword">for</span> (UserDO user : userList) {        <span class="hljs-keyword">if</span> (Boolean.TRUE.equals(user.getIsSuper())) {            hasSuper = <span class="hljs-keyword">true</span>;            <span class="hljs-keyword">break</span>;        }    }    <span class="hljs-keyword">return</span> hasSuper;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">hasSuper</span><span class="hljs-params">(@NonNull List&lt;UserDO&gt; userList)</span> </span>{    <span class="hljs-keyword">for</span> (UserDO user : userList) {        <span class="hljs-keyword">if</span> (Boolean.TRUE.equals(user.getIsSuper())) {            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;        }    }    <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;}</code></pre><h3 id="15利用-static-关键字"><a class="markdownIt-Anchor" href="#15利用-static-关键字"></a> <strong>1.5.利用 static 关键字</strong></h3><p>利用 static 关键字，可以把字段变成静态字段，也可以把函数变为静态函数，调用时就无需初始化类对象。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GisHelper</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">distance</span><span class="hljs-params">(<span class="hljs-keyword">double</span> lng1, <span class="hljs-keyword">double</span> lat1, <span class="hljs-keyword">double</span> lng2, <span class="hljs-keyword">double</span> lat2)</span> </span>{        <span class="hljs-comment">// 方法实现代码</span>    }}GisHelper gisHelper = <span class="hljs-keyword">new</span> GisHelper();<span class="hljs-keyword">double</span> distance = gisHelper.distance(<span class="hljs-number">116.178692</span>D, <span class="hljs-number">39.967115</span>D, <span class="hljs-number">116.410778</span>D, <span class="hljs-number">39.899721</span>D);</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GisHelper</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">double</span> <span class="hljs-title">distance</span><span class="hljs-params">(<span class="hljs-keyword">double</span> lng1, <span class="hljs-keyword">double</span> lat1, <span class="hljs-keyword">double</span> lng2, <span class="hljs-keyword">double</span> lat2)</span> </span>{        <span class="hljs-comment">// 方法实现代码</span>    }}<span class="hljs-keyword">double</span> distance = GisHelper.distance(<span class="hljs-number">116.178692</span>D, <span class="hljs-number">39.967115</span>D, <span class="hljs-number">116.410778</span>D, <span class="hljs-number">39.899721</span>D);</code></pre><h3 id="16利用-lambda-表达式"><a class="markdownIt-Anchor" href="#16利用-lambda-表达式"></a> <strong>1.6.利用 lambda 表达式</strong></h3><p>Java 8 发布以后，lambda 表达式大量替代匿名内部类的使用，在简化了代码的同时，更突出了原有匿名内部类中真正有用的那部分代码。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">new</span> Thread(<span class="hljs-keyword">new</span> Runnable() {    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">()</span> </span>{        <span class="hljs-comment">// 线程处理代码</span>    }}).start();</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">new</span> Thread(() -&gt; {    <span class="hljs-comment">// 线程处理代码</span>}).start();</code></pre><h3 id="17利用方法引用"><a class="markdownIt-Anchor" href="#17利用方法引用"></a> <strong>1.7.利用方法引用</strong></h3><p>方法引用（::），可以简化 lambda 表达式，省略变量声明和函数调用。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java">Arrays.sort(nameArray, (a, b) -&gt; a.compareToIgnoreCase(b));List&lt;Long&gt; userIdList = userList.stream()    .map(user -&gt; user.getId())    .collect(Collectors.toList());</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">Arrays.sort(nameArray, String::compareToIgnoreCase);List&lt;Long&gt; userIdList = userList.stream()    .map(UserDO::getId)    .collect(Collectors.toList());</code></pre><h3 id="18利用静态导入"><a class="markdownIt-Anchor" href="#18利用静态导入"></a> <strong>1.8.利用静态导入</strong></h3><p>静态导入（import static），当程序中大量使用同一静态常量和函数时，可以简化静态常量和函数的引用。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java">List&lt;Double&gt; areaList = radiusList.stream().map(r -&gt; Math.PI * Math.pow(r, <span class="hljs-number">2</span>)).collect(Collectors.toList());...</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.lang.Math.PI;<span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.lang.Math.pow;<span class="hljs-keyword">import</span> <span class="hljs-keyword">static</span> java.util.stream.Collectors.toList;List&lt;Double&gt; areaList = radiusList.stream().map(r -&gt; PI * pow(r, <span class="hljs-number">2</span>)).collect(toList());...</code></pre><p>注意：静态引入容易造成代码阅读困难，所以在实际项目中应该警慎使用。</p><h3 id="19利用-unchecked-异常"><a class="markdownIt-Anchor" href="#19利用-unchecked-异常"></a> <strong>1.9.利用 unchecked 异常</strong></h3><p>Java 的异常分为两类：Checked 异常和 Unchecked 异常。Unchecked 异常继承了RuntimeException ，特点是代码不需要处理它们也能通过编译，所以它们称作 Unchecked 异常。利用 Unchecked 异常，可以避免不必要的 try-catch 和 throws 异常处理。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Service</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserService</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">createUser</span><span class="hljs-params">(UserCreateVO create, OpUserVO user)</span> <span class="hljs-keyword">throws</span> BusinessException </span>{        checkOperatorUser(user);        ...    }    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">checkOperatorUser</span><span class="hljs-params">(OpUserVO user)</span> <span class="hljs-keyword">throws</span> BusinessException </span>{        <span class="hljs-keyword">if</span> (!hasPermission(user)) {            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BusinessException(<span class="hljs-string">"用户无操作权限"</span>);        }        ...    }    ...}<span class="hljs-meta">@RestController</span><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">"/user"</span>)<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserController</span> </span>{    <span class="hljs-meta">@Autowired</span>    <span class="hljs-keyword">private</span> UserService userService;    <span class="hljs-meta">@PostMapping</span>(<span class="hljs-string">"/createUser"</span>)    <span class="hljs-function"><span class="hljs-keyword">public</span> Result&lt;Void&gt; <span class="hljs-title">createUser</span><span class="hljs-params">(@RequestBody @Valid UserCreateVO create, OpUserVO user)</span> <span class="hljs-keyword">throws</span> BusinessException </span>{        userService.createUser(create, user);        <span class="hljs-keyword">return</span> Result.success();    }    ...}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Service</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserService</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">createUser</span><span class="hljs-params">(UserCreateVO create, OpUserVO user)</span> </span>{        checkOperatorUser(user);        ...    }    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">checkOperatorUser</span><span class="hljs-params">(OpUserVO user)</span> </span>{        <span class="hljs-keyword">if</span> (!hasPermission(user)) {            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> BusinessRuntimeException(<span class="hljs-string">"用户无操作权限"</span>);        }        ...    }    ...}<span class="hljs-meta">@RestController</span><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">"/user"</span>)<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserController</span> </span>{    <span class="hljs-meta">@Autowired</span>    <span class="hljs-keyword">private</span> UserService userService;    <span class="hljs-meta">@PostMapping</span>(<span class="hljs-string">"/createUser"</span>)    <span class="hljs-function"><span class="hljs-keyword">public</span> Result&lt;Void&gt; <span class="hljs-title">createUser</span><span class="hljs-params">(@RequestBody @Valid UserCreateVO create, OpUserVO user)</span> </span>{        userService.createUser(create, user);        <span class="hljs-keyword">return</span> Result.success();    }    ...}</code></pre><h2 id="利用注解"><a class="markdownIt-Anchor" href="#利用注解"></a> <strong>利用注解</strong></h2><h3 id="21利用-lombok-注解"><a class="markdownIt-Anchor" href="#21利用-lombok-注解"></a> <strong>2.1.利用 Lombok 注解</strong></h3><p>Lombok 提供了一组有用的注解，可以用来消除Java类中的大量样板代码。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserVO</span> </span>{    <span class="hljs-keyword">private</span> Long id;    <span class="hljs-keyword">private</span> String name;    <span class="hljs-function"><span class="hljs-keyword">public</span> Long <span class="hljs-title">getId</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.id;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setId</span><span class="hljs-params">(Long id)</span> </span>{        <span class="hljs-keyword">this</span>.id = id;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getName</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.name;    }    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setName</span><span class="hljs-params">(String name)</span> </span>{        <span class="hljs-keyword">this</span>.name = name;    }    ...}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserVO</span> </span>{    <span class="hljs-keyword">private</span> Long id;    <span class="hljs-keyword">private</span> String name;    ...}</code></pre><h3 id="22利用-validation-注解"><a class="markdownIt-Anchor" href="#22利用-validation-注解"></a> <strong>2.2.利用 Validation 注解</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToStringpublic</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserCreateVO</span> </span>{        <span class="hljs-meta">@NotBlank</span>(message = <span class="hljs-string">"用户名称不能为空"</span>)        <span class="hljs-keyword">private</span> String name;        <span class="hljs-meta">@NotNull</span>(message = <span class="hljs-string">"公司标识不能为空"</span>)        <span class="hljs-keyword">private</span> Long companyId;        ...}<span class="hljs-meta">@Service</span><span class="hljs-meta">@Validatedpublic</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserService</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> Long <span class="hljs-title">createUser</span><span class="hljs-params">(@Valid UserCreateVO create)</span> </span>{        <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 创建用户</span>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserCreateVO</span> </span>{    <span class="hljs-meta">@NotBlank</span>(message = <span class="hljs-string">"用户名称不能为空"</span>)    <span class="hljs-keyword">private</span> String name;    <span class="hljs-meta">@NotNull</span>(message = <span class="hljs-string">"公司标识不能为空"</span>)    <span class="hljs-keyword">private</span> Long companyId;    ...}<span class="hljs-meta">@Service</span><span class="hljs-meta">@Validated</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserService</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> Long <span class="hljs-title">createUser</span><span class="hljs-params">(@Valid UserCreateVO create)</span> </span>{        <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 创建用户</span>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    }}</code></pre><h3 id="23利用-nonnull-注解"><a class="markdownIt-Anchor" href="#23利用-nonnull-注解"></a> <strong>2.3.利用 @NonNull 注解</strong></h3><p>Spring 的 @NonNull 注解，用于标注参数或返回值非空，适用于项目内部团队协作。只要实现方和调用方遵循规范，可以避免不必要的空值判断，这充分体现了阿里的“新六脉神剑”提倡的“因为信任，所以简单”。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;UserVO&gt; <span class="hljs-title">queryCompanyUser</span><span class="hljs-params">(Long companyId)</span> </span>{    <span class="hljs-comment">// 检查公司标识</span>    <span class="hljs-keyword">if</span> (companyId == <span class="hljs-keyword">null</span>) {        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    }    <span class="hljs-comment">// 查询返回用户</span>    List&lt;UserDO&gt; userList = userDAO.queryByCompanyId(companyId);    <span class="hljs-keyword">return</span> userList.stream().map(<span class="hljs-keyword">this</span>::transUser).collect(Collectors.toList());}Long companyId = <span class="hljs-number">1L</span>;List&lt;UserVO&gt; userList = queryCompanyUser(companyId);<span class="hljs-keyword">if</span> (CollectionUtils.isNotEmpty(userList)) {    <span class="hljs-keyword">for</span> (UserVO user : userList) {        <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理公司用户</span>    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-meta">@NonNull</span> <span class="hljs-function">List&lt;UserVO&gt; <span class="hljs-title">queryCompanyUser</span><span class="hljs-params">(@NonNull Long companyId)</span> </span>{    List&lt;UserDO&gt; userList = userDAO.queryByCompanyId(companyId);    <span class="hljs-keyword">return</span> userList.stream().map(<span class="hljs-keyword">this</span>::transUser).collect(Collectors.toList());}Long companyId = <span class="hljs-number">1L</span>;List&lt;UserVO&gt; userList = queryCompanyUser(companyId);<span class="hljs-keyword">for</span> (UserVO user : userList) {    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理公司用户</span>}</code></pre><h3 id="24利用注解特性"><a class="markdownIt-Anchor" href="#24利用注解特性"></a> <strong>2.4.利用注解特性</strong></h3><p>注解有以下特性可用于精简注解声明：</p><p>1、当注解属性值跟默认值一致时，可以删除该属性赋值；</p><p>2、当注解只有value属性时，可以去掉value进行简写；</p><p>3、当注解属性组合等于另一个特定注解时，直接采用该特定注解。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Lazy</span>(<span class="hljs-keyword">true</span>);<span class="hljs-meta">@Service</span>(value = <span class="hljs-string">"userService"</span>)<span class="hljs-meta">@RequestMapping</span>(path = <span class="hljs-string">"/getUser"</span>, method = RequestMethod.GET)</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">java<span class="hljs-meta">@Lazy</span><span class="hljs-meta">@Service</span>(<span class="hljs-string">"userService"</span>)<span class="hljs-meta">@GetMapping</span>(<span class="hljs-string">"/getUser"</span>)</code></pre><h2 id="利用泛型"><a class="markdownIt-Anchor" href="#利用泛型"></a> <strong>利用泛型</strong></h2><h3 id="31泛型接口"><a class="markdownIt-Anchor" href="#31泛型接口"></a> <strong>3.1.泛型接口</strong></h3><p>在 Java 没有引入泛型前，都是采用 Object 表示通用对象，最大的问题就是类型无法强校验并且需要强制类型转换。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Comparable</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">compareTo</span><span class="hljs-params">(Object other)</span></span>;}<span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Comparable</span> </span>{    <span class="hljs-keyword">private</span> Long id;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">compareTo</span><span class="hljs-params">(Object other)</span> </span>{        UserVO user = (UserVO)other;        <span class="hljs-keyword">return</span> Long.compare(<span class="hljs-keyword">this</span>.id, user.id);    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Comparable</span>&lt;<span class="hljs-title">T</span>&gt; </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">compareTo</span><span class="hljs-params">(T other)</span></span>;}<span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserVO</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Comparable</span>&lt;<span class="hljs-title">UserVO</span>&gt; </span>{    <span class="hljs-keyword">private</span> Long id;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">compareTo</span><span class="hljs-params">(UserVO other)</span> </span>{        <span class="hljs-keyword">return</span> Long.compare(<span class="hljs-keyword">this</span>.id, other.id);    }}</code></pre><h3 id="32泛型类"><a class="markdownIt-Anchor" href="#32泛型类"></a> <strong>3.2.泛型类</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IntPoint</span> </span>{    <span class="hljs-keyword">private</span> Integer x;    <span class="hljs-keyword">private</span> Integer y;}<span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DoublePoint</span> </span>{    <span class="hljs-keyword">private</span> Double x;    <span class="hljs-keyword">private</span> Double y;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Point</span>&lt;<span class="hljs-title">T</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Number</span>&gt; </span>{    <span class="hljs-keyword">private</span> T x;    <span class="hljs-keyword">private</span> T y;}</code></pre><h3 id="33泛型方法"><a class="markdownIt-Anchor" href="#33泛型方法"></a> <strong>3.3.泛型方法</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Map&lt;String, Integer&gt; <span class="hljs-title">newHashMap</span><span class="hljs-params">(String[] keys, Integer[] values)</span> </span>{    <span class="hljs-comment">// 检查参数非空</span>    <span class="hljs-keyword">if</span> (ArrayUtils.isEmpty(keys) || ArrayUtils.isEmpty(values)) {        <span class="hljs-keyword">return</span> Collections.emptyMap();    }    <span class="hljs-comment">// 转化哈希映射</span>    Map&lt;String, Integer&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();    <span class="hljs-keyword">int</span> length = Math.min(keys.length, values.length);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++) {        map.put(keys[i], values[i]);    }    <span class="hljs-keyword">return</span> map;}...</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;K, V&gt; <span class="hljs-function">Map&lt;K, V&gt; <span class="hljs-title">newHashMap</span><span class="hljs-params">(K[] keys, V[] values)</span> </span>{    <span class="hljs-comment">// 检查参数非空</span>    <span class="hljs-keyword">if</span> (ArrayUtils.isEmpty(keys) || ArrayUtils.isEmpty(values)) {        <span class="hljs-keyword">return</span> Collections.emptyMap();    }    <span class="hljs-comment">// 转化哈希映射</span>    Map&lt;K, V&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();    <span class="hljs-keyword">int</span> length = Math.min(keys.length, values.length);    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; length; i++) {        map.put(keys[i], values[i]);    }    <span class="hljs-keyword">return</span> map;}...</code></pre><h2 id="利用自身方法"><a class="markdownIt-Anchor" href="#利用自身方法"></a> <strong>利用自身方法</strong></h2><h3 id="41利用构造方法"><a class="markdownIt-Anchor" href="#41利用构造方法"></a> <strong>4.1.利用构造方法</strong></h3><p>构造方法，可以简化对象的初始化和设置属性操作。对于属性字段较少的类，可以自定义构造方法。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PageDataVO</span>&lt;<span class="hljs-title">T</span>&gt; </span>{    <span class="hljs-keyword">private</span> Long totalCount;    <span class="hljs-keyword">private</span> List&lt;T&gt; dataList;}PageDataVO&lt;UserVO&gt; pageData = <span class="hljs-keyword">new</span> PageDataVO&lt;&gt;();pageData.setTotalCount(totalCount);pageData.setDataList(userList);<span class="hljs-keyword">return</span> pageData;...</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Getter</span><span class="hljs-meta">@Setter</span><span class="hljs-meta">@ToString</span><span class="hljs-meta">@NoArgsConstructor</span><span class="hljs-meta">@AllArgsConstructor</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PageDataVO</span>&lt;<span class="hljs-title">T</span>&gt; </span>{    <span class="hljs-keyword">private</span> Long totalCount;    <span class="hljs-keyword">private</span> List&lt;T&gt; dataList;}<span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> PageDataVO&lt;&gt;(totalCount, userList);</code></pre><p>注意：如果属性字段被替换时，存在构造函数初始化赋值问题。比如把属性字段title替换为 nickname ，由于构造函数的参数个数和类型不变，原有构造函数初始化语句不会报错，导致把原title值赋值给 nickname 。如果采用 Setter 方法赋值，编译器会提示错误并要求修复。</p><h3 id="42利用-set-的-add-方法"><a class="markdownIt-Anchor" href="#42利用-set-的-add-方法"></a> <strong>4.2.利用 Set 的 add 方法</strong></h3><p>利用 Set 的 add 方法的返回值，可以直接知道该值是否已经存在，可以避免调用 contains 方法判断存在。</p><p><strong>普通：</strong></p><p>以下案例是进行用户去重转化操作，需要先调用 contains 方法判断存在，后调用add方法进行添加。</p><pre class="highlight"><code class="java">Set&lt;Long&gt; userIdSet = <span class="hljs-keyword">new</span> HashSet&lt;&gt;();List&lt;UserVO&gt; userVOList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<span class="hljs-keyword">for</span> (UserDO userDO : userDOList) {    <span class="hljs-keyword">if</span> (!userIdSet.contains(userDO.getId())) {        userIdSet.add(userDO.getId());        userVOList.add(transUser(userDO));    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">Set&lt;Long&gt; userIdSet = <span class="hljs-keyword">new</span> HashSet&lt;&gt;();List&lt;UserVO&gt; userVOList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<span class="hljs-keyword">for</span> (UserDO userDO : userDOList) {    <span class="hljs-keyword">if</span> (userIdSet.add(userDO.getId())) {        userVOList.add(transUser(userDO));    }}</code></pre><h3 id="43利用-map-的-computeifabsent-方法"><a class="markdownIt-Anchor" href="#43利用-map-的-computeifabsent-方法"></a> <strong>4.3.利用 Map 的 computeIfAbsent 方法</strong></h3><p>利用 Map 的 computeIfAbsent 方法，可以保证获取到的对象非空，从而避免了不必要的空判断和重新设置值。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java">Map&lt;Long, List&lt;UserDO&gt;&gt; roleUserMap = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<span class="hljs-keyword">for</span> (UserDO userDO : userDOList) {    Long roleId = userDO.getRoleId();    List&lt;UserDO&gt; userList = roleUserMap.get(roleId);    <span class="hljs-keyword">if</span> (Objects.isNull(userList)) {        userList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();        roleUserMap.put(roleId, userList);    }    userList.add(userDO);}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">Map&lt;Long, List&lt;UserDO&gt;&gt; roleUserMap = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<span class="hljs-keyword">for</span> (UserDO userDO : userDOList) {    roleUserMap.computeIfAbsent(userDO.getRoleId(), key -&gt; <span class="hljs-keyword">new</span> ArrayList&lt;&gt;())        .add(userDO);}</code></pre><h3 id="44利用链式编程"><a class="markdownIt-Anchor" href="#44利用链式编程"></a> <strong>4.4.利用链式编程</strong></h3><p>链式编程，也叫级联式编程，调用对象的函数时返回一个this对象指向对象本身，达到链式效果，可以级联调用。链式编程的优点是：编程性强、可读性强、代码简洁。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java">StringBuilder builder = <span class="hljs-keyword">new</span> StringBuilder(<span class="hljs-number">96</span>);builder.append(<span class="hljs-string">"select id, name from "</span>);builder.append(T_USER);builder.append(<span class="hljs-string">" where id = "</span>);builder.append(userId);builder.append(<span class="hljs-string">";"</span>);</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">StringBuilder builder = <span class="hljs-keyword">new</span> StringBuilder(<span class="hljs-number">96</span>);builder.append(<span class="hljs-string">"select id, name from "</span>)    .append(T_USER)    .append(<span class="hljs-string">" where id = "</span>)    .append(userId)    .append(<span class="hljs-string">";"</span>);</code></pre><h2 id="利用工具方法"><a class="markdownIt-Anchor" href="#利用工具方法"></a> <strong>利用工具方法</strong></h2><h3 id="51避免空值判断"><a class="markdownIt-Anchor" href="#51避免空值判断"></a> <strong>5.1.避免空值判断</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">if</span> (userList != <span class="hljs-keyword">null</span> &amp;&amp; !userList.isEmpty()) {    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理代码</span>}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">if</span> (CollectionUtils.isNotEmpty(userList)) {    <span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> 处理代码java</span>}</code></pre><h3 id="52避免条件判断"><a class="markdownIt-Anchor" href="#52避免条件判断"></a> <strong>5.2.避免条件判断</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">double</span> result;<span class="hljs-keyword">if</span> (value &lt;= MIN_LIMIT) {    result = MIN_LIMIT;} <span class="hljs-keyword">else</span> {    result = value;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">double</span> result = Math.max(MIN_LIMIT, value);</code></pre><h3 id="53简化赋值语句"><a class="markdownIt-Anchor" href="#53简化赋值语句"></a> <strong>5.3.简化赋值语句</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java">javapublic <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> List&lt;String&gt; ANIMAL_LIST;<span class="hljs-keyword">static</span> {    List&lt;String&gt; animalList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();    animalList.add(<span class="hljs-string">"dog"</span>);    animalList.add(<span class="hljs-string">"cat"</span>);    animalList.add(<span class="hljs-string">"tiger"</span>);    ANIMAL_LIST = Collections.unmodifiableList(animalList);}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-comment">// JDK流派</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> List&lt;String&gt; ANIMAL_LIST = Arrays.asList(<span class="hljs-string">"dog"</span>, <span class="hljs-string">"cat"</span>, <span class="hljs-string">"tiger"</span>);<span class="hljs-comment">// Guava流派</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> List&lt;String&gt; ANIMAL_LIST = ImmutableList.of(<span class="hljs-string">"dog"</span>, <span class="hljs-string">"cat"</span>, <span class="hljs-string">"tiger"</span>);</code></pre><p>注意：Arrays.asList 返回的 List 并不是 ArrayList ，不支持 add 等变更操作。</p><h3 id="54简化数据拷贝"><a class="markdownIt-Anchor" href="#54简化数据拷贝"></a> <strong>5.4.简化数据拷贝</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java">UserVO userVO = <span class="hljs-keyword">new</span> UserVO();userVO.setId(userDO.getId());userVO.setName(userDO.getName());...userVO.setDescription(userDO.getDescription());userVOList.add(userVO);</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">UserVO userVO = <span class="hljs-keyword">new</span> UserVO();BeanUtils.copyProperties(userDO, userVO);userVOList.add(userVO);</code></pre><p><strong>反例：</strong></p><pre class="highlight"><code class="java">List&lt;UserVO&gt; userVOList = JSON.parseArray(JSON.toJSONString(userDOList), UserVO<span class="hljs-class">.<span class="hljs-keyword">class</span>)</span>;</code></pre><p>精简代码，但不能以过大的性能损失为代价。例子是浅层拷贝，用不着 JSON 这样重量级的武器。</p><h3 id="55简化异常断言"><a class="markdownIt-Anchor" href="#55简化异常断言"></a> 5.5.简化异常断言</h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">if</span> (Objects.isNull(userId)) {    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> IllegalArgumentException(<span class="hljs-string">"用户标识不能为空"</span>);}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">Assert.notNull(userId, <span class="hljs-string">"用户标识不能为空"</span>);</code></pre><p>注意：可能有些插件不认同这种判断，导致使用该对象时会有空指针警告。</p><h3 id="56简化测试用例"><a class="markdownIt-Anchor" href="#56简化测试用例"></a> <strong>5.6.简化测试用例</strong></h3><p>把测试用例数据以 JSON 格式存入文件中，通过 JSON 的 parseObject 和 parseArray 方法解析成对象。虽然执行效率上有所下降，但可以减少大量的赋值语句，从而精简了测试代码。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testCreateUser</span><span class="hljs-params">()</span> </span>{    UserCreateVO userCreate = <span class="hljs-keyword">new</span> UserCreateVO();    userCreate.setName(<span class="hljs-string">"Changyi"</span>);    userCreate.setTitle(<span class="hljs-string">"Developer"</span>);    userCreate.setCompany(<span class="hljs-string">"AMAP"</span>);    ...    Long userId  = userService.createUser(OPERATOR, userCreate);    Assert.assertNotNull(userId, <span class="hljs-string">"创建用户失败"</span>);}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testCreateUser</span><span class="hljs-params">()</span> </span>{    String jsonText = ResourceHelper.getResourceAsString(getClass(), <span class="hljs-string">"createUser.json"</span>);    UserCreateVO userCreate = JSON.parseObject(jsonText, UserCreateVO<span class="hljs-class">.<span class="hljs-keyword">class</span>)</span>;    Long userId  = userService.createUser(OPERATOR, userCreate);    Assert.assertNotNull(userId, <span class="hljs-string">"创建用户失败"</span>);}</code></pre><p>建议：JSON 文件名最好以被测试的方法命名，如果有多个版本可以用数字后缀表示。</p><h3 id="57简化算法实现"><a class="markdownIt-Anchor" href="#57简化算法实现"></a> <strong>5.7.简化算法实现</strong></h3><p>一些常规算法，已有现成的工具方法，我们就没有必要自己实现了。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">int</span> totalSize = valueList.size();List&lt;List&lt;Integer&gt;&gt; partitionList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; totalSize; i += PARTITION_SIZE) {    partitionList.add(valueList.subList(i, Math.min(i + PARTITION_SIZE, totalSize)));}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">List&lt;List&lt;Integer&gt;&gt; partitionList = ListUtils.partition(valueList, PARTITION_SIZE);<span class="hljs-number">5.8</span>.封装工具方法</code></pre><p>一些特殊算法，没有现成的工具方法，我们就只好自己亲自实现了。</p><p><strong>普通：</strong></p><p>比如，SQL 设置参数值的方法就比较难用，setLong 方法不能设置参数值为 null 。</p><pre class="highlight"><code class="java"> <span class="hljs-comment">// 设置参数值</span><span class="hljs-keyword">if</span> (Objects.nonNull(user.getId())) {  statement.setLong(<span class="hljs-number">1</span>, user.getId());} <span class="hljs-keyword">else</span> {    statement.setNull(<span class="hljs-number">1</span>, Types.BIGINT);}...</code></pre><p><strong>精简：</strong></p><p>我们可以封装为一个工具类 SqlHelper ，简化设置参数值的代码。</p><pre class="highlight"><code class="java"><span class="hljs-comment">/** SQL辅助类 */</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SqlHelper</span> </span>{    <span class="hljs-comment">/** 设置长整数值 */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setLong</span><span class="hljs-params">(PreparedStatement statement, <span class="hljs-keyword">int</span> index, Long value)</span> <span class="hljs-keyword">throws</span> SQLException </span>{        <span class="hljs-keyword">if</span> (Objects.nonNull(value)) {            statement.setLong(index, value.longValue());        } <span class="hljs-keyword">else</span> {            statement.setNull(index, Types.BIGINT);        }    }    ...} <span class="hljs-comment">// 设置参数值</span>SqlHelper.setLong(statement, <span class="hljs-number">1</span>, user.getId());</code></pre><h2 id="利用数据结构"><a class="markdownIt-Anchor" href="#利用数据结构"></a> <strong>利用数据结构</strong></h2><h3 id="61利用数组简化"><a class="markdownIt-Anchor" href="#61利用数组简化"></a> <strong>6.1.利用数组简化</strong></h3><p>对于固定上下限范围的 if-else 语句，可以用数组+循环来简化。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getGrade</span><span class="hljs-params">(<span class="hljs-keyword">double</span> score)</span> </span>{    <span class="hljs-keyword">if</span> (score &gt;= <span class="hljs-number">90.0</span>D) {        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;    }    <span class="hljs-keyword">if</span> (score &gt;= <span class="hljs-number">80.0</span>D) {        <span class="hljs-keyword">return</span> <span class="hljs-number">2</span>;    }    <span class="hljs-keyword">if</span> (score &gt;= <span class="hljs-number">60.0</span>D) {        <span class="hljs-keyword">return</span> <span class="hljs-number">3</span>;    }    <span class="hljs-keyword">if</span> (score &gt;= <span class="hljs-number">30.0</span>D) {        <span class="hljs-keyword">return</span> <span class="hljs-number">4</span>;    }    <span class="hljs-keyword">return</span> <span class="hljs-number">5</span>;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">double</span>[] SCORE_RANGES = <span class="hljs-keyword">new</span> <span class="hljs-keyword">double</span>[] {<span class="hljs-number">90.0</span>D, <span class="hljs-number">80.0</span>D, <span class="hljs-number">60.0</span>D, <span class="hljs-number">30.0</span>D};<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getGrade</span><span class="hljs-params">(<span class="hljs-keyword">double</span> score)</span> </span>{    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; SCORE_RANGES.length; i++) {        <span class="hljs-keyword">if</span> (score &gt;= SCORE_RANGES[i]) {            <span class="hljs-keyword">return</span> i + <span class="hljs-number">1</span>;        }    }    <span class="hljs-keyword">return</span> SCORE_RANGES.length + <span class="hljs-number">1</span>;}</code></pre><p>思考：上面的案例返回值是递增的，所以用数组简化是没有问题的。但是，如果返回值不是递增的，能否用数组进行简化呢？答案是可以的，请自行思考解决。</p><h3 id="62利用-map-简化"><a class="markdownIt-Anchor" href="#62利用-map-简化"></a> <strong>6.2.利用 Map 简化</strong></h3><p>对于映射关系的 if-else 语句，可以用Map来简化。此外，此规则同样适用于简化映射关系的 switch 语句。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">getBiologyClass</span><span class="hljs-params">(String name)</span> </span>{    <span class="hljs-keyword">switch</span> (name) {        <span class="hljs-keyword">case</span> <span class="hljs-string">"dog"</span> :            <span class="hljs-keyword">return</span> <span class="hljs-string">"animal"</span>;        <span class="hljs-keyword">case</span> <span class="hljs-string">"cat"</span> :            <span class="hljs-keyword">return</span> <span class="hljs-string">"animal"</span>;        <span class="hljs-keyword">case</span> <span class="hljs-string">"lavender"</span> :            <span class="hljs-keyword">return</span> <span class="hljs-string">"plant"</span>;        ...        <span class="hljs-keyword">default</span> :            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Map&lt;String, String&gt; BIOLOGY_CLASS_MAP    = ImmutableMap.&lt;String, String&gt;builder()        .put(<span class="hljs-string">"dog"</span>, <span class="hljs-string">"animal"</span>)        .put(<span class="hljs-string">"cat"</span>, <span class="hljs-string">"animal"</span>)        .put(<span class="hljs-string">"lavender"</span>, <span class="hljs-string">"plant"</span>)        ...        .build();<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">getBiologyClass</span><span class="hljs-params">(String name)</span> </span>{    <span class="hljs-keyword">return</span> BIOLOGY_CLASS_MAP.get(name);}</code></pre><p>已经把方法简化为一行代码，其实都没有封装方法的必要了。</p><h3 id="63利用容器类简化"><a class="markdownIt-Anchor" href="#63利用容器类简化"></a> <strong>6.3.利用容器类简化</strong></h3><p>Java 不像 Python 和 Go ，方法不支持返回多个对象。如果需要返回多个对象，就必须自定义类，或者利用容器类。常见的容器类有 Apache 的 Pair 类和 Triple 类， Pair 类支持返回 2 个对象， Triple 类支持返回 3 个对象。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Setter</span><span class="hljs-meta">@Getter</span><span class="hljs-meta">@ToString</span><span class="hljs-meta">@AllArgsConstructor</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PointAndDistance</span> </span>{    <span class="hljs-keyword">private</span> Point point;    <span class="hljs-keyword">private</span> Double distance;}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> PointAndDistance <span class="hljs-title">getNearest</span><span class="hljs-params">(Point point, Point[] points)</span> </span>{    <span class="hljs-comment">// 计算最近点和距离</span>    ...    <span class="hljs-comment">// 返回最近点和距离</span>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> PointAndDistance(nearestPoint, nearestDistance);}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Pair&lt;Point, Double&gt; <span class="hljs-title">getNearest</span><span class="hljs-params">(Point point, Point[] points)</span> </span>{    <span class="hljs-comment">// 计算最近点和距离</span>    ...    <span class="hljs-comment">// 返回最近点和距离</span>    <span class="hljs-keyword">return</span> ImmutablePair.of(nearestPoint, nearestDistance);}</code></pre><h3 id="64利用-threadlocal-简化"><a class="markdownIt-Anchor" href="#64利用-threadlocal-简化"></a> <strong>6.4.利用 ThreadLocal 简化</strong></h3><p>ThreadLocal 提供了线程专有对象，可以在整个线程生命周期中随时取用，极大地方便了一些逻辑的实现。用 ThreadLocal 保存线程上下文对象，可以避免不必要的参数传递。</p><p><strong>普通：</strong></p><p>由于 DateFormat 的 format 方法线程非安全（建议使用替代方法），在线程中频繁初始化 DateFormat 性能太低，如果考虑重用只能用参数传入 DateFormat 。例子如下：</p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">formatDate</span><span class="hljs-params">(Date date, DateFormat format)</span> </span>{    <span class="hljs-keyword">return</span> format.format(date);}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;String&gt; <span class="hljs-title">getDateList</span><span class="hljs-params">(Date minDate, Date maxDate, DateFormat format)</span> </span>{    List&lt;String&gt; dateList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();    Calendar calendar = Calendar.getInstance();    calendar.setTime(minDate);    String currDate = formatDate(calendar.getTime(), format);    String maxsDate = formatDate(maxDate, format);    <span class="hljs-keyword">while</span> (currDate.compareTo(maxsDate) &lt;= <span class="hljs-number">0</span>) {        dateList.add(currDate);        calendar.add(Calendar.DATE, <span class="hljs-number">1</span>);        currDate = formatDate(calendar.getTime(), format);    }    <span class="hljs-keyword">return</span> dateList;}精简：</code></pre><p>可能你会觉得以下的代码量反而多了，如果调用工具方法的地方比较多，就可以省下一大堆 DateFormat 初始化和传入参数的代码。</p><pre class="highlight"><code class="java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> ThreadLocal&lt;DateFormat&gt; LOCAL_DATE_FORMAT = <span class="hljs-keyword">new</span> ThreadLocal&lt;DateFormat&gt;() {    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> DateFormat <span class="hljs-title">initialValue</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> SimpleDateFormat(<span class="hljs-string">"yyyyMMdd"</span>);    }};<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">formatDate</span><span class="hljs-params">(Date date)</span> </span>{    <span class="hljs-keyword">return</span> LOCAL_DATE_FORMAT.get().format(date);}<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> List&lt;String&gt; <span class="hljs-title">getDateList</span><span class="hljs-params">(Date minDate, Date maxDate)</span> </span>{    List&lt;String&gt; dateList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();    Calendar calendar = Calendar.getInstance();    calendar.setTime(minDate);    String currDate = formatDate(calendar.getTime());    String maxsDate = formatDate(maxDate);    <span class="hljs-keyword">while</span> (currDate.compareTo(maxsDate) &lt;= <span class="hljs-number">0</span>) {        dateList.add(currDate);        calendar.add(Calendar.DATE, <span class="hljs-number">1</span>);        currDate = formatDate(calendar.getTime());    }    <span class="hljs-keyword">return</span> dateList;}</code></pre><p>注意：ThreadLocal 有一定的内存泄露的风险，尽量在业务代码结束前调用 remove 方法进行数据清除。</p><h2 id="利用-optional"><a class="markdownIt-Anchor" href="#利用-optional"></a> <strong>利用 Optional</strong></h2><p>在 Java 8 里，引入了一个 Optional 类，该类是一个可以为 null 的容器对象。</p><h3 id="71保证值存在"><a class="markdownIt-Anchor" href="#71保证值存在"></a> <strong>7.1.保证值存在</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java">Integer thisValue;<span class="hljs-keyword">if</span> (Objects.nonNull(value)) {    thisValue = value;} <span class="hljs-keyword">else</span> {    thisValue = DEFAULT_VALUE;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">Integer thisValue = Optional.ofNullable(value).orElse(DEFAULT_VALUE);</code></pre><h3 id="72保证值合法"><a class="markdownIt-Anchor" href="#72保证值合法"></a> <strong>7.2.保证值合法</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java">Integer thisValue;<span class="hljs-keyword">if</span> (Objects.nonNull(value) &amp;&amp; value.compareTo(MAX_VALUE) &lt;= <span class="hljs-number">0</span>) {    thisValue = value;} <span class="hljs-keyword">else</span> {    thisValue = MAX_VALUE;}精简：Integer thisValue = Optional.ofNullable(value)    .filter(tempValue -&gt; tempValue.compareTo(MAX_VALUE) &lt;= <span class="hljs-number">0</span>).orElse(MAX_VALUE);<span class="hljs-number">7.3</span>.避免空判断</code></pre><p><strong>普通：</strong></p><pre class="highlight"><code class="java">String zipcode = <span class="hljs-keyword">null</span>;<span class="hljs-keyword">if</span> (Objects.nonNull(user)) {    Address address = user.getAddress();    <span class="hljs-keyword">if</span> (Objects.nonNull(address)) {        Country country = address.getCountry();        <span class="hljs-keyword">if</span> (Objects.nonNull(country)) {            zipcode = country.getZipcode();        }    }}精简：String zipcode = Optional.ofNullable(user).map(User::getAddress)    .map(Address::getCountry).map(Country::getZipcode).orElse(<span class="hljs-keyword">null</span>);</code></pre><h2 id="利用-stream"><a class="markdownIt-Anchor" href="#利用-stream"></a> <strong>利用 Stream</strong></h2><p>流（Stream）是Java 8的新成员，允许你以声明式处理数据集合，可以看成为一个遍历数据集的高级迭代器。流主要有三部分构成：获取一个数据源→数据转换→执行操作获取想要的结果。每次转换原有 Stream 对象不改变，返回一个新的 Stream 对象，这就允许对其操作可以像链条一样排列，形成了一个管道。流（Stream）提供的功能非常有用，主要包括匹配、过滤、汇总、转化、分组、分组汇总等功能。</p><h3 id="81匹配集合数据"><a class="markdownIt-Anchor" href="#81匹配集合数据"></a> <strong>8.1.匹配集合数据</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">boolean</span> isFound = <span class="hljs-keyword">false</span>;<span class="hljs-keyword">for</span> (UserDO user : userList) {    <span class="hljs-keyword">if</span> (Objects.equals(user.getId(), userId)) {        isFound = <span class="hljs-keyword">true</span>;        <span class="hljs-keyword">break</span>;    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">boolean</span> isFound = userList.stream()    .anyMatch(user -&gt; Objects.equals(user.getId(), userId));</code></pre><h3 id="82过滤集合数据"><a class="markdownIt-Anchor" href="#82过滤集合数据"></a> 8.2.过滤集合数据</h3><p>普通：**</p><pre class="highlight"><code class="java">List&lt;UserDO&gt; resultList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<span class="hljs-keyword">for</span> (UserDO user : userList) {    <span class="hljs-keyword">if</span> (Boolean.TRUE.equals(user.getIsSuper())) {        resultList.add(user);    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">List&lt;UserDO&gt; resultList = userList.stream()    .filter(user -&gt; Boolean.TRUE.equals(user.getIsSuper()))    .collect(Collectors.toList());</code></pre><h3 id="83汇总集合数据"><a class="markdownIt-Anchor" href="#83汇总集合数据"></a> 8.3.汇总集合数据</h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">double</span> total = <span class="hljs-number">0.0</span>D;<span class="hljs-keyword">for</span> (Account account : accountList) {    total += account.getBalance();}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">double</span> total = accountList.stream().mapToDouble(Account::getBalance).sum();</code></pre><h3 id="84转化集合数据"><a class="markdownIt-Anchor" href="#84转化集合数据"></a> 8.4.转化集合数据</h3><p>普通：**</p><pre class="highlight"><code class="java">List&lt;UserVO&gt; userVOList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<span class="hljs-keyword">for</span> (UserDO userDO : userDOList) {    userVOList.add(transUser(userDO));}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">List&lt;UserVO&gt; userVOList = userDOList.stream()    .map(<span class="hljs-keyword">this</span>::transUser).collect(Collectors.toList());</code></pre><h3 id="85分组集合数据"><a class="markdownIt-Anchor" href="#85分组集合数据"></a> <strong>8.5.分组集合数据</strong></h3><p><strong>普通：</strong></p><pre class="highlight"><code class="java">Map&lt;Long, List&lt;UserDO&gt;&gt; roleUserMap = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<span class="hljs-keyword">for</span> (UserDO userDO : userDOList) {    roleUserMap.computeIfAbsent(userDO.getRoleId(), key -&gt; <span class="hljs-keyword">new</span> ArrayList&lt;&gt;())        .add(userDO);}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">Map&lt;Long, List&lt;UserDO&gt;&gt; roleUserMap = userDOList.stream()    .collect(Collectors.groupingBy(UserDO::getRoleId));</code></pre><h3 id="86分组汇总集合"><a class="markdownIt-Anchor" href="#86分组汇总集合"></a> 8.6.分组汇总集合</h3><p>普通：**</p><pre class="highlight"><code class="java">Map&lt;Long, Double&gt; roleTotalMap = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<span class="hljs-keyword">for</span> (Account account : accountList) {    Long roleId = account.getRoleId();    Double total = Optional.ofNullable(roleTotalMap.get(roleId)).orElse(<span class="hljs-number">0.0</span>D);    roleTotalMap.put(roleId, total + account.getBalance());}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">roleTotalMap = accountList.stream().collect(Collectors.groupingBy(Account::getRoleId, Collectors.summingDouble(Account::getBalance)));</code></pre><h3 id="87生成范围集合"><a class="markdownIt-Anchor" href="#87生成范围集合"></a> 8.7.生成范围集合</h3><p>Python 的 range 非常方便，Stream 也提供了类似的方法。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">int</span>[] array1 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[N];<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; N; i++) {    array1[i] = i + <span class="hljs-number">1</span>;}<span class="hljs-keyword">int</span>[] array2 = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[N];array2[<span class="hljs-number">0</span>] = <span class="hljs-number">1</span>;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; N; i++) {    array2[i] = array2[i - <span class="hljs-number">1</span>] * <span class="hljs-number">2</span>;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">int</span>[] array1 = IntStream.rangeClosed(<span class="hljs-number">1</span>, N).toArray();<span class="hljs-keyword">int</span>[] array2 = IntStream.iterate(<span class="hljs-number">1</span>, n -&gt; n * <span class="hljs-number">2</span>).limit(N).toArray();</code></pre><h2 id="利用程序结构"><a class="markdownIt-Anchor" href="#利用程序结构"></a> <strong>利用程序结构</strong></h2><h3 id="91返回条件表达式"><a class="markdownIt-Anchor" href="#91返回条件表达式"></a> <strong>9.1.返回条件表达式</strong></h3><p>条件表达式判断返回布尔值，条件表达式本身就是结果。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isSuper</span><span class="hljs-params">(Long userId)</span>    UserDO user </span>= userDAO.get(userId);    <span class="hljs-keyword">if</span> (Objects.nonNull(user) &amp;&amp; Boolean.TRUE.equals(user.getIsSuper())) {        <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;    }    <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isSuper</span><span class="hljs-params">(Long userId)</span>    UserDO user </span>= userDAO.get(userId);    <span class="hljs-keyword">return</span> Objects.nonNull(user) &amp;&amp; Boolean.TRUE.equals(user.getIsSuper());}</code></pre><h3 id="92最小化条件作用域"><a class="markdownIt-Anchor" href="#92最小化条件作用域"></a> 9.2.最小化条件作用域</h3><p>最小化条件作用域，尽量提出公共处理代码。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java">Result result = summaryService.reportWorkDaily(workDaily);<span class="hljs-keyword">if</span> (result.isSuccess()) {    String message = <span class="hljs-string">"上报工作日报成功"</span>;    dingtalkService.sendMessage(user.getPhone(), message);} <span class="hljs-keyword">else</span> {    String message = <span class="hljs-string">"上报工作日报失败:"</span> + result.getMessage();    log.warn(message);    dingtalkService.sendMessage(user.getPhone(), message);}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">String message;Result result = summaryService.reportWorkDaily(workDaily);<span class="hljs-keyword">if</span> (result.isSuccess()) {    message = <span class="hljs-string">"上报工作日报成功"</span>;} <span class="hljs-keyword">else</span> {    message = <span class="hljs-string">"上报工作日报失败:"</span> + result.getMessage();    log.warn(message);}dingtalkService.sendMessage(user.getPhone(), message);</code></pre><h3 id="93调整表达式位置"><a class="markdownIt-Anchor" href="#93调整表达式位置"></a> <strong>9.3.调整表达式位置</strong></h3><p>调整表达式位置，在逻辑不变的前提下，让代码变得更简洁。</p><p><strong>普通1：</strong></p><pre class="highlight"><code class="java">String line = readLine();<span class="hljs-keyword">while</span> (Objects.nonNull(line)) {    ... <span class="hljs-comment">// 处理逻辑代码</span>    line = readLine();}</code></pre><p><strong>普通2：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">for</span> (String line = readLine(); Objects.nonNull(line); line = readLine()) {    ... <span class="hljs-comment">// 处理逻辑代码</span>}精简：String line;<span class="hljs-keyword">while</span> (Objects.nonNull(line = readLine())) {    ... <span class="hljs-comment">// 处理逻辑代码</span>}</code></pre><p>注意：有些规范可能不建议这种精简写法。</p><h3 id="94利用非空对象"><a class="markdownIt-Anchor" href="#94利用非空对象"></a> <strong>9.4.利用非空对象</strong></h3><p>在比较对象时，交换对象位置，利用非空对象，可以避免空指针判断。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> MAX_VALUE = <span class="hljs-number">1000</span>;<span class="hljs-keyword">boolean</span> isMax = (value != <span class="hljs-keyword">null</span> &amp;&amp; value.equals(MAX_VALUE));<span class="hljs-keyword">boolean</span> isTrue = (result != <span class="hljs-keyword">null</span> &amp;&amp; result.equals(Boolean.TRUE));</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Integer MAX_VALUE = <span class="hljs-number">1000</span>;<span class="hljs-keyword">boolean</span> isMax = MAX_VALUE.equals(value);<span class="hljs-keyword">boolean</span> isTrue = Boolean.TRUE.equals(result);</code></pre><h2 id="利用设计模式"><a class="markdownIt-Anchor" href="#利用设计模式"></a> <strong>利用设计模式</strong></h2><h3 id="101模板方法模式"><a class="markdownIt-Anchor" href="#101模板方法模式"></a> <strong>10.1.模板方法模式</strong></h3><p>模板方法模式（Template Method Pattern）定义一个固定的算法框架，而将算法的一些步骤放到子类中实现，使得子类可以在不改变算法框架的情况下重定义该算法的某些步骤。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Repository</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserValue</span> </span>{    <span class="hljs-comment">/** 值操作 */</span>    <span class="hljs-meta">@Resource</span>(name = <span class="hljs-string">"stringRedisTemplate"</span>)    <span class="hljs-keyword">private</span> ValueOperations&lt;String, String&gt; valueOperations;    <span class="hljs-comment">/** 值模式 */</span>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String KEY_FORMAT = <span class="hljs-string">"Value:User:%s"</span>;    <span class="hljs-comment">/** 设置值 */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">set</span><span class="hljs-params">(Long id, UserDO value)</span> </span>{        String key = String.format(KEY_FORMAT, id);        valueOperations.set(key, JSON.toJSONString(value));    }    <span class="hljs-comment">/** 获取值 */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> UserDO <span class="hljs-title">get</span><span class="hljs-params">(Long id)</span> </span>{        String key = String.format(KEY_FORMAT, id);        String value = valueOperations.get(key);        <span class="hljs-keyword">return</span> JSON.parseObject(value, UserDO<span class="hljs-class">.<span class="hljs-keyword">class</span>)</span>;    }    ...}<span class="hljs-meta">@Repository</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RoleValue</span> </span>{    <span class="hljs-comment">/** 值操作 */</span>    <span class="hljs-meta">@Resource</span>(name = <span class="hljs-string">"stringRedisTemplate"</span>)    <span class="hljs-keyword">private</span> ValueOperations&lt;String, String&gt; valueOperations;    <span class="hljs-comment">/** 值模式 */</span>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String KEY_FORMAT = <span class="hljs-string">"Value:Role:%s"</span>;    <span class="hljs-comment">/** 设置值 */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">set</span><span class="hljs-params">(Long id, RoleDO value)</span> </span>{        String key = String.format(KEY_FORMAT, id);        valueOperations.set(key, JSON.toJSONString(value));    }    <span class="hljs-comment">/** 获取值 */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> RoleDO <span class="hljs-title">get</span><span class="hljs-params">(Long id)</span> </span>{        String key = String.format(KEY_FORMAT, id);        String value = valueOperations.get(key);        <span class="hljs-keyword">return</span> JSON.parseObject(value, RoleDO<span class="hljs-class">.<span class="hljs-keyword">class</span>)</span>;    }    ...}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AbstractDynamicValue</span>&lt;<span class="hljs-title">I</span>, <span class="hljs-title">V</span>&gt; </span>{    <span class="hljs-comment">/** 值操作 */</span>    <span class="hljs-meta">@Resource</span>(name = <span class="hljs-string">"stringRedisTemplate"</span>)    <span class="hljs-keyword">private</span> ValueOperations&lt;String, String&gt; valueOperations;    <span class="hljs-comment">/** 设置值 */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">set</span><span class="hljs-params">(I id, V value)</span> </span>{        valueOperations.set(getKey(id), JSON.toJSONString(value));    }    <span class="hljs-comment">/** 获取值 */</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> V <span class="hljs-title">get</span><span class="hljs-params">(I id)</span> </span>{        <span class="hljs-keyword">return</span> JSON.parseObject(valueOperations.get(getKey(id)), getValueClass());    }    ...    <span class="hljs-comment">/** 获取主键 */</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> String <span class="hljs-title">getKey</span><span class="hljs-params">(I id)</span></span>;    <span class="hljs-comment">/** 获取值类 */</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">abstract</span> Class&lt;V&gt; <span class="hljs-title">getValueClass</span><span class="hljs-params">()</span></span>;}<span class="hljs-meta">@Repository</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserValue</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractValue</span>&lt;<span class="hljs-title">Long</span>, <span class="hljs-title">UserDO</span>&gt; </span>{    <span class="hljs-comment">/** 获取主键 */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> String <span class="hljs-title">getKey</span><span class="hljs-params">(Long id)</span> </span>{        <span class="hljs-keyword">return</span> String.format(<span class="hljs-string">"Value:User:%s"</span>, id);    }    <span class="hljs-comment">/** 获取值类 */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> Class&lt;UserDO&gt; <span class="hljs-title">getValueClass</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> UserDO<span class="hljs-class">.<span class="hljs-keyword">class</span></span>;    }}<span class="hljs-meta">@Repository</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RoleValue</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AbstractValue</span>&lt;<span class="hljs-title">Long</span>, <span class="hljs-title">RoleDO</span>&gt; </span>{    <span class="hljs-comment">/** 获取主键 */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> String <span class="hljs-title">getKey</span><span class="hljs-params">(Long id)</span> </span>{        <span class="hljs-keyword">return</span> String.format(<span class="hljs-string">"Value:Role:%s"</span>, id);    }    <span class="hljs-comment">/** 获取值类 */</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> Class&lt;RoleDO&gt; <span class="hljs-title">getValueClass</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> RoleDO<span class="hljs-class">.<span class="hljs-keyword">class</span></span>;    }}</code></pre><h3 id="102建造者模式"><a class="markdownIt-Anchor" href="#102建造者模式"></a> <strong>10.2.建造者模式</strong></h3><p>建造者模式（Builder Pattern）将一个复杂对象的构造与它的表示分离，使同样的构建过程可以创建不同的表示，这样的设计模式被称为建造者模式。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">DataHandler</span>&lt;<span class="hljs-title">T</span>&gt; </span>{    <span class="hljs-comment">/** 解析数据 */</span><span class="hljs-function"><span class="hljs-keyword">public</span> T <span class="hljs-title">parseData</span><span class="hljs-params">(Record record)</span></span>;    <span class="hljs-comment">/** 存储数据 */</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">storeData</span><span class="hljs-params">(List&lt;T&gt; dataList)</span></span>;}<span class="hljs-keyword">public</span> &lt;T&gt; <span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-title">executeFetch</span><span class="hljs-params">(String tableName, <span class="hljs-keyword">int</span> batchSize, DataHandler&lt;T&gt; dataHandler)</span> <span class="hljs-keyword">throws</span> Exception </span>{    <span class="hljs-comment">// 构建下载会话</span>    DownloadSession session = buildSession(tableName);    <span class="hljs-comment">// 获取数据数量</span>    <span class="hljs-keyword">long</span> recordCount = session.getRecordCount();    <span class="hljs-keyword">if</span> (recordCount == <span class="hljs-number">0</span>) {        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;    }    <span class="hljs-comment">// 进行数据读取</span>    <span class="hljs-keyword">long</span> fetchCount = <span class="hljs-number">0L</span>;    <span class="hljs-keyword">try</span> (RecordReader reader = session.openRecordReader(<span class="hljs-number">0L</span>, recordCount, <span class="hljs-keyword">true</span>)) {        <span class="hljs-comment">// 依次读取数据</span>        Record record;        List&lt;T&gt; dataList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(batchSize);        <span class="hljs-keyword">while</span> ((record = reader.read()) != <span class="hljs-keyword">null</span>) {            <span class="hljs-comment">// 解析添加数据</span>            T data = dataHandler.parseData(record);            <span class="hljs-keyword">if</span> (Objects.nonNull(data)) {                dataList.add(data);            }            <span class="hljs-comment">// 批量存储数据</span>            <span class="hljs-keyword">if</span> (dataList.size() == batchSize) {                <span class="hljs-keyword">boolean</span> isContinue = dataHandler.storeData(dataList);                fetchCount += batchSize;                dataList.clear();                <span class="hljs-keyword">if</span> (!isContinue) {                    <span class="hljs-keyword">break</span>;                }            }        }        <span class="hljs-comment">// 存储剩余数据</span>        <span class="hljs-keyword">if</span> (CollectionUtils.isNotEmpty(dataList)) {            dataHandler.storeData(dataList);            fetchCount += dataList.size();            dataList.clear();        }    }    <span class="hljs-comment">// 返回获取数量</span>    <span class="hljs-keyword">return</span> fetchCount;} <span class="hljs-comment">// 使用案例</span><span class="hljs-keyword">long</span> fetchCount = odpsService.executeFetch(<span class="hljs-string">"user"</span>, <span class="hljs-number">5000</span>, <span class="hljs-keyword">new</span> DataHandler() {    <span class="hljs-comment">/** 解析数据 */</span>    <span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> T <span class="hljs-title">parseData</span><span class="hljs-params">(Record record)</span> </span>{        UserDO user = <span class="hljs-keyword">new</span> UserDO();        user.setId(record.getBigint(<span class="hljs-string">"id"</span>));        user.setName(record.getString(<span class="hljs-string">"name"</span>));        <span class="hljs-keyword">return</span> user;    }    <span class="hljs-comment">/** 存储数据 */</span>    <span class="hljs-meta">@Override</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">storeData</span><span class="hljs-params">(List&lt;T&gt; dataList)</span> </span>{        userDAO.batchInsert(dataList);        <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;    }});</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> &lt;T&gt; <span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-title">executeFetch</span><span class="hljs-params">(String tableName, <span class="hljs-keyword">int</span> batchSize, Function&lt;Record, T&gt; dataParser, Function&lt;List&lt;T&gt;, Boolean&gt; dataStorage)</span> <span class="hljs-keyword">throws</span> Exception </span>{    <span class="hljs-comment">// 构建下载会话</span>    DownloadSession session = buildSession(tableName);    <span class="hljs-comment">// 获取数据数量</span>    <span class="hljs-keyword">long</span> recordCount = session.getRecordCount();    <span class="hljs-keyword">if</span> (recordCount == <span class="hljs-number">0</span>) {        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;    }    <span class="hljs-comment">// 进行数据读取</span>    <span class="hljs-keyword">long</span> fetchCount = <span class="hljs-number">0L</span>;    <span class="hljs-keyword">try</span> (RecordReader reader = session.openRecordReader(<span class="hljs-number">0L</span>, recordCount, <span class="hljs-keyword">true</span>)) {        <span class="hljs-comment">// 依次读取数据</span>        Record record;        List&lt;T&gt; dataList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;(batchSize);        <span class="hljs-keyword">while</span> ((record = reader.read()) != <span class="hljs-keyword">null</span>) {            <span class="hljs-comment">// 解析添加数据</span>            T data = dataParser.apply(record);            <span class="hljs-keyword">if</span> (Objects.nonNull(data)) {                dataList.add(data);            }            <span class="hljs-comment">// 批量存储数据</span>            <span class="hljs-keyword">if</span> (dataList.size() == batchSize) {                Boolean isContinue = dataStorage.apply(dataList);                fetchCount += batchSize;                dataList.clear();                <span class="hljs-keyword">if</span> (!Boolean.TRUE.equals(isContinue)) {                    <span class="hljs-keyword">break</span>;                }            }        }        <span class="hljs-comment">// 存储剩余数据</span>        <span class="hljs-keyword">if</span> (CollectionUtils.isNotEmpty(dataList)) {            dataStorage.apply(dataList);            fetchCount += dataList.size();            dataList.clear();        }    }    <span class="hljs-comment">// 返回获取数量</span>    <span class="hljs-keyword">return</span> fetchCount;} <span class="hljs-comment">// 使用案例</span><span class="hljs-keyword">long</span> fetchCount = odpsService.executeFetch(<span class="hljs-string">"user"</span>, <span class="hljs-number">5000</span>, record -&gt; {        UserDO user = <span class="hljs-keyword">new</span> UserDO();        user.setId(record.getBigint(<span class="hljs-string">"id"</span>));        user.setName(record.getString(<span class="hljs-string">"name"</span>));        <span class="hljs-keyword">return</span> user;    }, dataList -&gt; {        userDAO.batchInsert(dataList);        <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;    });</code></pre><p>普通的建造者模式，实现时需要定义 DataHandler 接口，调用时需要实现 DataHandler 匿名内部类，代码较多较繁琐。而精简后的建造者模式，充分利用了函数式编程，实现时无需定义接口，直接使用 Function 接口；调用时无需实现匿名内部类，直接采用 lambda 表达式，代码较少较简洁。</p><h3 id="103代理模式"><a class="markdownIt-Anchor" href="#103代理模式"></a> <strong>10.3.代理模式</strong></h3><p>Spring 中最重要的代理模式就是 AOP (Aspect-Oriented Programming，面向切面的编程)，是使用 JDK 动态代理和 CGLIB 动态代理技术来实现的。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Slf</span>4j<span class="hljs-meta">@RestController</span><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">"/user"</span>)<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserController</span> </span>{    <span class="hljs-comment">/** 用户服务 */</span>    <span class="hljs-meta">@Autowired</span>    <span class="hljs-keyword">private</span> UserService userService;    <span class="hljs-comment">/** 查询用户 */</span>    <span class="hljs-meta">@PostMapping</span>(<span class="hljs-string">"/queryUser"</span>)    <span class="hljs-keyword">public</span> Result&lt;?&gt; queryUser(<span class="hljs-meta">@RequestBody</span> <span class="hljs-meta">@Valid</span> UserQueryVO query) {        <span class="hljs-keyword">try</span> {            PageDataVO&lt;UserVO&gt; pageData = userService.queryUser(query);            <span class="hljs-keyword">return</span> Result.success(pageData);        } <span class="hljs-keyword">catch</span> (Exception e) {            log.error(e.getMessage(), e);            <span class="hljs-keyword">return</span> Result.failure(e.getMessage());        }    }    ...}</code></pre><p><strong>精简1：</strong></p><p>基于 @ControllerAdvice 的异常处理：</p><pre class="highlight"><code class="java"><span class="hljs-meta">@RestController</span><span class="hljs-meta">@RequestMapping</span>(<span class="hljs-string">"/user"</span>)<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserController</span> </span>{    <span class="hljs-comment">/** 用户服务 */</span>    <span class="hljs-meta">@Autowired</span>    <span class="hljs-keyword">private</span> UserService userService;    <span class="hljs-comment">/** 查询用户 */</span>    <span class="hljs-meta">@PostMapping</span>(<span class="hljs-string">"/queryUser"</span>)    <span class="hljs-keyword">public</span> Result&lt;PageDataVO&lt;UserVO&gt;&gt; queryUser(<span class="hljs-meta">@RequestBody</span> <span class="hljs-meta">@Valid</span> UserQueryVO query) {        PageDataVO&lt;UserVO&gt; pageData = userService.queryUser(query);        <span class="hljs-keyword">return</span> Result.success(pageData);    }    ...}<span class="hljs-meta">@Slf</span>4j<span class="hljs-meta">@ControllerAdvice</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">GlobalControllerAdvice</span> </span>{    <span class="hljs-comment">/** 处理异常 */</span>    <span class="hljs-meta">@ResponseBody</span>    <span class="hljs-meta">@ExceptionHandler</span>(Exception<span class="hljs-class">.<span class="hljs-keyword">class</span>)    <span class="hljs-title">public</span> <span class="hljs-title">Result</span>&lt;<span class="hljs-title">Void</span>&gt; <span class="hljs-title">handleException</span>(<span class="hljs-title">Exception</span> <span class="hljs-title">e</span>) </span>{        log.error(e.getMessage(), e);        <span class="hljs-keyword">return</span> Result.failure(e.getMessage());    }}</code></pre><p><strong>精简2：</strong></p><p>基于 AOP 的异常处理：</p><pre class="highlight"><code class="java"><span class="hljs-comment">// UserController代码同"精简1"</span><span class="hljs-meta">@Slf</span>4j<span class="hljs-meta">@Aspect</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WebExceptionAspect</span> </span>{    <span class="hljs-comment">/** 点切面 */</span>    <span class="hljs-meta">@Pointcut</span>(<span class="hljs-string">"@annotation(org.springframework.web.bind.annotation.RequestMapping)"</span>)    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">webPointcut</span><span class="hljs-params">()</span> </span>{}    <span class="hljs-comment">/** 处理异常 */</span>    <span class="hljs-meta">@AfterThrowing</span>(pointcut = <span class="hljs-string">"webPointcut()"</span>, throwing = <span class="hljs-string">"e"</span>)    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">handleException</span><span class="hljs-params">(Exception e)</span> </span>{        Result&lt;Void&gt; result = Result.failure(e.getMessage());        writeContent(JSON.toJSONString(result));    }    ...}</code></pre><h2 id="利用删除代码"><a class="markdownIt-Anchor" href="#利用删除代码"></a> <strong>利用删除代码</strong></h2><p>“少即是多”，“少”不是空白而是精简，“多”不是拥挤而是完美。删除多余的代码，才能使代码更精简更完美。</p><h3 id="111删除已废弃的代码"><a class="markdownIt-Anchor" href="#111删除已废弃的代码"></a> <strong>11.1.删除已废弃的代码</strong></h3><p>删除项目中的已废弃的包、类、字段、方法、变量、常量、导入、注解、注释、已注释代码、Maven包导入、MyBatis的SQL语句、属性配置字段等，可以精简项目代码便于维护。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<span class="hljs-meta">@Slf</span>4j<span class="hljs-meta">@Service</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProductService</span> </span>{    <span class="hljs-meta">@Value</span>(<span class="hljs-string">"discardRate"</span>)    <span class="hljs-keyword">private</span> <span class="hljs-keyword">double</span> discardRate;    ...    <span class="hljs-function"><span class="hljs-keyword">private</span> ProductVO <span class="hljs-title">transProductDO</span><span class="hljs-params">(ProductDO productDO)</span> </span>{        ProductVO productVO = <span class="hljs-keyword">new</span> ProductVO();        BeanUtils.copyProperties(productDO, productVO);        <span class="hljs-comment">// productVO.setPrice(getDiscardPrice(productDO.getPrice()));</span>        <span class="hljs-keyword">return</span> productVO;    }    <span class="hljs-function"><span class="hljs-keyword">private</span> BigDecimal <span class="hljs-title">getDiscardPrice</span><span class="hljs-params">(BigDecimal originalPrice)</span> </span>{        ...    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-meta">@Service</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ProductService</span> </span>{    ...    <span class="hljs-function"><span class="hljs-keyword">private</span> ProductVO <span class="hljs-title">transProductDO</span><span class="hljs-params">(ProductDO productDO)</span> </span>{        ProductVO productVO = <span class="hljs-keyword">new</span> ProductVO();        BeanUtils.copyProperties(productDO, productVO);        <span class="hljs-keyword">return</span> productVO;    }}</code></pre><h3 id="112删除接口方法的public"><a class="markdownIt-Anchor" href="#112删除接口方法的public"></a> <strong>11.2.删除接口方法的public</strong></h3><p>对于接口(interface)，所有的字段和方法都是 public 的，可以不用显式声明为 public 。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">UserDAO</span> </span>{    <span class="hljs-function"><span class="hljs-keyword">public</span> Long <span class="hljs-title">countUser</span><span class="hljs-params">(@Param(<span class="hljs-string">"query"</span>)</span> UserQuery query)</span>;    <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;UserDO&gt; <span class="hljs-title">queryUser</span><span class="hljs-params">(@Param(<span class="hljs-string">"query"</span>)</span> UserQuery query)</span>;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">UserDAO</span> </span>{    <span class="hljs-function">Long <span class="hljs-title">countUser</span><span class="hljs-params">(@Param(<span class="hljs-string">"query"</span>)</span> UserQuery query)</span>;    <span class="hljs-function">List&lt;UserDO&gt; <span class="hljs-title">queryUser</span><span class="hljs-params">(@Param(<span class="hljs-string">"query"</span>)</span> UserQuery query)</span>;}</code></pre><h3 id="113删除枚举构造方法的-private"><a class="markdownIt-Anchor" href="#113删除枚举构造方法的-private"></a> <strong>11.3.删除枚举构造方法的 private</strong></h3><p>对于枚举(menu)，构造方法都是 private 的，可以不用显式声明为 private 。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> UserStatus {    DISABLED(<span class="hljs-number">0</span>, <span class="hljs-string">"禁用"</span>),    ENABLED(<span class="hljs-number">1</span>, <span class="hljs-string">"启用"</span>);  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Integer value;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String desc;    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">UserStatus</span><span class="hljs-params">(Integer value, String desc)</span> </span>{        <span class="hljs-keyword">this</span>.value = value;        <span class="hljs-keyword">this</span>.desc = desc;    }    ...}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> UserStatus {    DISABLED(<span class="hljs-number">0</span>, <span class="hljs-string">"禁用"</span>),    ENABLED(<span class="hljs-number">1</span>, <span class="hljs-string">"启用"</span>);    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Integer value;    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String desc;    UserStatus(Integer value, String desc) {        <span class="hljs-keyword">this</span>.value = value;        <span class="hljs-keyword">this</span>.desc = desc;    }    ...}</code></pre><h3 id="114删除-final-类方法的-final"><a class="markdownIt-Anchor" href="#114删除-final-类方法的-final"></a> <strong>11.4.删除 final 类方法的 final</strong></h3><p>对于 final 类，不能被子类继承，所以其方法不会被覆盖，没有必要添加 final 修饰。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> Rectangle implements Shape {    ...    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getArea</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> width * height;    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> Rectangle implements Shape {    ...    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getArea</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> width * height;    }}</code></pre><h3 id="115删除基类-implements-的接口"><a class="markdownIt-Anchor" href="#115删除基类-implements-的接口"></a> <strong>11.5.删除基类 implements 的接口</strong></h3><p>如果基类已 implements 某接口，子类没有必要再 implements 该接口，只需要直接实现接口方法即可。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">Shape</span> </span>{    ...    <span class="hljs-function"><span class="hljs-keyword">double</span> <span class="hljs-title">getArea</span><span class="hljs-params">()</span></span>;}<span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> AbstractShape implements Shape {    ...}<span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> Rectangle extends AbstractShape implements Shape {    ...    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getArea</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> width * height;    }}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java">...<span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> Rectangle extends AbstractShape {    ...    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">double</span> <span class="hljs-title">getArea</span><span class="hljs-params">()</span> </span>{        <span class="hljs-keyword">return</span> width * height;    }}</code></pre><h3 id="116删除不必要的变量"><a class="markdownIt-Anchor" href="#116删除不必要的变量"></a> <strong>11.6.删除不必要的变量</strong></h3><p>不必要的变量，只会让代码看起来更繁琐。</p><p><strong>普通：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title">existsUser</span><span class="hljs-params">(Long userId)</span> </span>{    Boolean exists = userDAO.exists(userId);    <span class="hljs-keyword">return</span> exists;}</code></pre><p><strong>精简：</strong></p><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> Boolean <span class="hljs-title">existsUser</span><span class="hljs-params">(Long userId)</span> </span>{    <span class="hljs-keyword">return</span> userDAO.exists(userId);}</code></pre><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> <strong>后记</strong></h2><p>古语又云：</p><blockquote><p>有道无术，术尚可求也；有术无道，止于术。</p></blockquote><p>意思是：有“道”而无“术”，“术”还可以逐渐获得；有“术”而无“道”，就可能止步于“术”了。所以，我们不要仅满足于从实践中总结“术”，因为“道”的表现形式是多变的；而应该上升到“道”的高度，因为“术”背后的道理是相通的。当遇到新的事物时，我们可以从理论中找到“道”、从实践中找出“术”，尝试着去认知新的事物。</p><p>本文作者：陈昌毅，花名常意，地图技术专家。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:36:49 GMT+0800 (中国标准时间) --&gt;&lt;blockquote&gt;&lt;p&gt;以下文章来源于阿里巴巴中间件 ，作者常意&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;作者 | 常意&lt;/p&gt;&lt;p&gt;来源 | 阿里巴巴
      
    
    </summary>
    
    
      <category term="Java" scheme="https://wtrwx.top/categories/Java/"/>
    
    
      <category term="Java" scheme="https://wtrwx.top/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>生物必修二提纲</title>
    <link href="https://wtrwx.top/20200421/biological-compulsory-two-outline.html"/>
    <id>https://wtrwx.top/20200421/biological-compulsory-two-outline.html</id>
    <published>2020-04-21T15:24:49.000Z</published>
    <updated>2020-05-08T01:00:56.316Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --><h1 id="生物学-必修-2-遗传与进化"><a class="markdownIt-Anchor" href="#生物学-必修-2-遗传与进化"></a> 生物学 必修 2 遗传与进化</h1><p>参考资料：</p><p>1.<a href="https://bp.pep.com.cn/ebook/gzswbxer/mobile/index.html" target="_blank" rel="noopener">普通高中教科书 生物学 必修 2 遗传与进化（人民教育出版社）</a></p><p>2.<a href="https://www.bilibili.com/video/BV1LE41197Gu" target="_blank" rel="noopener">【我在B站学生物】高中生物 必修2 新教材适用 遗传与进化 合集（张云翼_channel）</a></p><h2 id="第-1-章-遗传因子的发现"><a class="markdownIt-Anchor" href="#第-1-章-遗传因子的发现"></a> 第 1 章 遗传因子的发现</h2><h3 id="第-1-节-孟德尔的豌豆杂交实验一"><a class="markdownIt-Anchor" href="#第-1-节-孟德尔的豌豆杂交实验一"></a> 第 1 节 孟德尔的豌豆杂交实验（一）</h3><h4 id="一-豌豆用作遗传实验材料的优点"><a class="markdownIt-Anchor" href="#一-豌豆用作遗传实验材料的优点"></a> 一、豌豆用作遗传实验材料的优点</h4><p>1.自花传粉（自交），在自然状态下可以获得纯种，纯种杂交获得杂合子</p><p>2.易于区分的性状（高、矮茎，圆、皱粒），性状能够稳定遗传给后代</p><p>3.花大，易做人工杂交实验</p><h4 id="二-豌豆的人工杂交技术"><a class="markdownIt-Anchor" href="#二-豌豆的人工杂交技术"></a> 二、豌豆的人工杂交技术</h4><p>（1）去雄：除去未成熟花的全部雄蕊。</p><p>（2）套袋：套上塑料袋或纸袋，防止外来花粉干扰。</p><p>（3）人工异花传粉的步骤：去雄→套袋→人工授粉→再套袋。</p><p>（4）异花传粉时，提供花粉的植株称为父本，接受花粉的植株称为母本。</p><h4 id="三-一对相对性状的杂交实验"><a class="markdownIt-Anchor" href="#三-一对相对性状的杂交实验"></a> 三、一对相对性状的杂交实验</h4><h5 id="1相对性状"><a class="markdownIt-Anchor" href="#1相对性状"></a> 1.相对性状</h5><p>一种生物的同一种性状的不同表现类型就叫做相对性状。</p><h5 id="2过程"><a class="markdownIt-Anchor" href="#2过程"></a> 2.过程：</h5><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200420141257573.png" srcset="/img/loading.gif" alt="image-20200420141257573"></p><h6 id="1符号的含义"><a class="markdownIt-Anchor" href="#1符号的含义"></a> 1.符号的含义</h6><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.13889em">P</span></span></span></span>亲本、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>子一代、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>子二代、♂父本、♀母本</p><h6 id="2正交和反交"><a class="markdownIt-Anchor" href="#2正交和反交"></a> 2.正交和反交</h6><p>若该杂交方式称为正交，则反交的父本是矮茎豌豆，母本是高茎豌豆。</p><h6 id="3实验过程分析"><a class="markdownIt-Anchor" href="#3实验过程分析"></a> 3.实验过程分析</h6><p>（1）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>中显现出来的性状叫做显性性状（如图中高茎）；未显现出来的性状叫做隐性性状（如图中矮茎）。</p><p>（2）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>杂合高茎豌豆自交后代同时出现显性性状（高茎）和隐性性状（矮茎）的现象叫做性状分离。</p><p>（3）孟德尔对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>中的不同性状的个体进行数量统计，结果显示787株是高茎，277株是矮茎，比例接近于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn><mo>:</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">3:1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>，而且<strong>正反交的结果相同</strong>。</p><h4 id="四-对分离现象的解释"><a class="markdownIt-Anchor" href="#四-对分离现象的解释"></a> 四、对分离现象的解释</h4><h5 id="1高茎豌豆与矮茎豌豆杂交实验的分析图解"><a class="markdownIt-Anchor" href="#1高茎豌豆与矮茎豌豆杂交实验的分析图解"></a> 1.高茎豌豆与矮茎豌豆杂交实验的分析图解</h5><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200420142248668.png" srcset="/img/loading.gif" alt="image-20200420142248668"></p><h5 id="2孟德尔的假说"><a class="markdownIt-Anchor" href="#2孟德尔的假说"></a> 2.孟德尔的假说</h5><p>（1）生物的性状是由遗传因子决定的，决定高茎和矮茎的遗传因子分别为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">d</span></span></span></span>。</p><p>（2）体细胞中遗传因子是成对存在的，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>的遗传因子组成为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Dd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mord mathdefault">d</span></span></span></span>。</p><p>（3）生物体在形成生殖细胞配子时，成对的遗传因子彼此分离，分别进入不同的配子中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>产生配子的遗传因子组成及比例为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo>:</mo><mi>d</mi><mo>=</mo><mn>1</mn><mo>:</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">D:d=1:1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>。</p><p>（4）受精时，雌雄配子的结合是随机的。</p><p>①配子的结合方式：<strong>4种</strong>。</p><p>②遗传因子组成：<strong>3种</strong>，分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">DD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mord mathdefault" style="margin-right:.02778em">D</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Dd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mord mathdefault">d</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">dd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>，其比例为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>:</mo><mn>2</mn><mo>:</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1:2:1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">2</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>。</p><p>③产生后代的性状表现：<strong>2种</strong>，分别为高茎、矮茎，其比例为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn><mo>:</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">3:1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>。</p><h4 id="五-对分离现象解释的验证"><a class="markdownIt-Anchor" href="#五-对分离现象解释的验证"></a> 五、对分离现象解释的验证</h4><p>测交：</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200420143349100.png" srcset="/img/loading.gif" alt="image-20200420143349100"></p><h4 id="六-分离定律"><a class="markdownIt-Anchor" href="#六-分离定律"></a> 六、分离定律</h4><p><em>在生物的体细胞中，控制同一性状的<strong>遗传因子</strong>成对存在，不相融合；在形成配子时，成对的遗传因子发生分离，分离后的遗传因子分别进入不同的配子中，随配子遗传给后代。</em></p><h3 id="第-2-节-孟德尔的豌豆杂交实验二"><a class="markdownIt-Anchor" href="#第-2-节-孟德尔的豌豆杂交实验二"></a> 第 2 节 孟德尔的豌豆杂交实验（二）</h3><h4 id="一-两对相对性状的杂交实验"><a class="markdownIt-Anchor" href="#一-两对相对性状的杂交实验"></a> 一、两对相对性状的杂交实验</h4><p>孟德尔用纯种黄色圆粒豌豆和纯种绿色皱粒豌豆作亲本进行杂交，无论正交还是反交，结出的种子（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>）都是黄色圆粒的。这表明黄色和圆粒都是显性性状，绿色和皱粒都是隐性性状。孟德尔又让<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>自交，在产生的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>中，出现了黄色圆粒和绿色皱粒，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>中还出现了亲本所没有的性状组合—绿色圆粒和黄色皱粒。</p><blockquote><p>为什么会出现新的性状组合呢？</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200420193248405.png" srcset="/img/loading.gif" alt="image-20200420193248405"></p><p>孟德尔同样对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>中不同的性状类型进行了数量统计：在总共得到的556粒种子中，黄色圆粒、绿色圆粒、黄色皱粒和绿色皱粒的数量依次是315、108、101和32，它们的数量比接近于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn><mo>:</mo><mn>3</mn><mo>:</mo><mn>3</mn><mo>:</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">9:3:3:1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">9</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>。</p><blockquote><p>这与一对相对性状实验中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn><mo>:</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">3:1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>的数量比有联系吗？</p></blockquote><p>孟德尔首先对每一对相对性状单独进行分析，结果发现每一对相对性状的遗传都遵循了分离定律。</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200420193635422.png" srcset="/img/loading.gif" alt="image-20200420193635422"></p><p>上述分析表明，无论是豌豆种子的形状还是颜色，只看一对相对性状，依然遵循分离定律。那么，将两对相对性状的遗传一并考虑，它们之间是什么关系呢？</p><h4 id="二-对自由组合现象的解释和验证"><a class="markdownIt-Anchor" href="#二-对自由组合现象的解释和验证"></a> 二、对自由组合现象的解释和验证</h4><h5 id="1解释"><a class="markdownIt-Anchor" href="#1解释"></a> 1.解释</h5><p>假设豌豆的圆粒和皱粒分别由遗传因子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>控制，黄色和绿色分别由遗传因子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span></span></span></span>控制，这样，纯种黄色圆粒和纯种绿色皱粒豌豆的遗传因子组成分别是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>Y</mi><mi>R</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">YYRR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mi>y</mi><mi>r</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">yyrr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.02778em">r</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>，它们产生的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>的遗传因子组成是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>y</mi><mi>R</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">YyRr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>，表现为黄色圆粒。孟德尔作出的解释是：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>在产生配子时，每对遗传因子彼此分离，不同对的遗传因子可以自由组合。这样<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>产生的雌配子和雄配子各有4种：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">YR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Yr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">yR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">yr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>，它们之间的数量比为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>:</mo><mn>1</mn><mo>:</mo><mn>1</mn><mo>:</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1:1:1:1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>。受精时，雌雄配子的结合是随机的。雌雄配子的结合方式有16种；遗传因子的组合形式有9种：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>Y</mi><mi>R</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">YYRR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>Y</mi><mi>R</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">YYRr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>y</mi><mi>R</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">YyRR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>y</mi><mi>R</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">YyRr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>Y</mi><mi>r</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">YYrr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.02778em">r</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>y</mi><mi>r</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Yyrr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.02778em">r</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mi>y</mi><mi>R</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">yyRR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mi>y</mi><mi>R</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">yyRr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mi>y</mi><mi>r</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">yyrr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.02778em">r</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>；性状表现为4种：黄色圆粒、黄色皱粒、绿色圆粒、绿色皱粒，它们之间的数量比是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn><mo>:</mo><mn>3</mn><mo>:</mo><mn>3</mn><mo>:</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">9:3:3:1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">9</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">3</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">1</span></span></span></span>。</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200420194337164.png" srcset="/img/loading.gif" alt="image-20200420194337164"></p><h5 id="2验证"><a class="markdownIt-Anchor" href="#2验证"></a> 2.验证</h5><p>孟德尔设计了测交实验，让杂种子一代（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi><mi>y</mi><mi>R</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">YyRr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.22222em">Y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>）与隐性纯合子（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mi>y</mi><mi>r</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">yyrr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mord mathdefault" style="margin-right:.02778em">r</span><span class="mord mathdefault" style="margin-right:.02778em">r</span></span></span></span>）杂交。</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200420194728871.png" srcset="/img/loading.gif" alt="image-20200420194728871"></p><h4 id="三-自由组合定律"><a class="markdownIt-Anchor" href="#三-自由组合定律"></a> 三、自由组合定律</h4><p>孟德尔在他所研究的豌豆7对相对性状中，任取两对性状进行杂交实验，结果都是一样的。后人把这一遗传规律称为孟德尔第二定律，也叫做<strong>自由组合定律</strong>：<em>控制<strong>不同性状</strong>的<strong>遗传因子</strong>的分离和组合是<strong>互不干扰</strong>的；在形成配子时，决定同一性状的成对的遗传因子彼此分离，决定不同性状的遗传因子自由组合。</em></p><h4 id="四-孟德尔实验方法的启示"><a class="markdownIt-Anchor" href="#四-孟德尔实验方法的启示"></a> 四、孟德尔实验方法的启示</h4><p>1.豌豆的优良特性</p><p>2.对性状遗传的研究，从一对到多对</p><p>3.对实验结果进行统计学分析</p><p>4.设计测交实验</p><h4 id="五-孟德尔遗传规律的再发现"><a class="markdownIt-Anchor" href="#五-孟德尔遗传规律的再发现"></a> 五、孟德尔遗传规律的再发现</h4><p>1909年，丹麦生物学家约翰逊将孟德尔的&quot;遗传因子&quot;叫做&quot;<strong>基因</strong>&quot;，并且提出了<strong>表现型</strong>和<strong>基因型</strong>的概念。表现型指生物个体表现出来的性状，如豌豆的高茎和矮茎；与表现型有关的基因组成叫做基因型，如高茎豌豆的基因型是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">DD</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mord mathdefault" style="margin-right:.02778em">D</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">Dd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mord mathdefault">d</span></span></span></span>，矮茎豌豆的基因型是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">dd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">d</span></span></span></span>。控制相对性状的基因，叫做等位基因，如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault">d</span></span></span></span>。</p><p>孟德尔被世人公认为&quot;<strong>遗传学之父</strong>&quot;。</p><h4 id="六-孟德尔遗传规律的应用"><a class="markdownIt-Anchor" href="#六-孟德尔遗传规律的应用"></a> 六、孟德尔遗传规律的应用</h4><p>1.人们有目的地将具有不同优良性状的两个亲本杂交，使两个亲本的优良性状组合在一起。（抗倒伏抗条锈病小麦）</p><p>2.医学上对后代患病概率的推断</p><h2 id="第-2-章-基因和染色体的关系"><a class="markdownIt-Anchor" href="#第-2-章-基因和染色体的关系"></a> 第 2 章 基因和染色体的关系</h2><h3 id="第-1-节-减数分裂和受精作用"><a class="markdownIt-Anchor" href="#第-1-节-减数分裂和受精作用"></a> 第 1 节 减数分裂和受精作用</h3><h4 id="一-减数分裂"><a class="markdownIt-Anchor" href="#一-减数分裂"></a> 一、减数分裂</h4><p><em>减数分裂——<strong>特殊</strong>的<strong>有丝分裂</strong></em></p><p>同源染色体：配对的两条染色体，形状和大小一般都相同，一条来自父方，一条来自母方，叫做同源染色体。</p><p>联会：在减数分裂过程中，同源染色体两两配对的现象叫做联会。</p><p>四分体：联会后的每对同源染色体含有四条染色单体。</p><h5 id="1间期"><a class="markdownIt-Anchor" href="#1间期"></a> 1.间期</h5><p>发育中的纺锤体出现，完成DNA分子的复制和有关蛋白质的合成，同时细胞有适度的生长，此时出现染色体。</p><h5 id="2减数分裂i"><a class="markdownIt-Anchor" href="#2减数分裂i"></a> 2.减数分裂Ⅰ</h5><h6 id="前期"><a class="markdownIt-Anchor" href="#前期"></a> 前期</h6><p>①两失两现（与有丝分裂一致）</p><p>②同源染色体联会</p><p>③同源染色体的非姐妹染色单体发生交叉互换</p><h6 id="中期"><a class="markdownIt-Anchor" href="#中期"></a> 中期</h6><p>①着丝粒附着于纺锤丝</p><p>②同源染色体附着在赤道板</p><h6 id="后期"><a class="markdownIt-Anchor" href="#后期"></a> 后期</h6><p>①同源染色体分开移向两极</p><h6 id="末期"><a class="markdownIt-Anchor" href="#末期"></a> 末期</h6><p>①两失两现（与有丝分裂一致）</p><p>②完成胞质分裂</p><h5 id="3减数分裂ii"><a class="markdownIt-Anchor" href="#3减数分裂ii"></a> 3.减数分裂Ⅱ</h5><h6 id="前期-2"><a class="markdownIt-Anchor" href="#前期-2"></a> 前期</h6><p>①两失两现（与有丝分裂一致）</p><h6 id="中期-2"><a class="markdownIt-Anchor" href="#中期-2"></a> 中期</h6><p>①着丝粒附着于纺锤丝</p><p>②同源染色体附着在赤道板</p><h6 id="后期-2"><a class="markdownIt-Anchor" href="#后期-2"></a> 后期</h6><p>①同源染色体分开移向两极</p><h6 id="末期-2"><a class="markdownIt-Anchor" href="#末期-2"></a> 末期</h6><p>①两失两现（与有丝分裂一致）</p><p>②完成胞质分裂</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421101731328.png" srcset="/img/loading.gif" alt="image-20200421101731328"></p><h5 id="4精子的形成过程"><a class="markdownIt-Anchor" href="#4精子的形成过程"></a> 4.精子的形成过程</h5><p>在减数分裂前，每个精原细胞（曲细精管）的染色体复制一次，而细胞在减数分裂的过程中连续分裂两次，最后形成四个精细胞，这两次分裂分别叫做<strong>减数分裂Ⅰ</strong>（也叫做减数第一次分裂）和<strong>减数分裂Ⅱ</strong>（也叫减数第二次分裂）。</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421102104032.png" srcset="/img/loading.gif" alt="image-20200421102104032"></p><h5 id="5卵细胞的形成过程"><a class="markdownIt-Anchor" href="#5卵细胞的形成过程"></a> 5.卵细胞的形成过程</h5><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421102229848.png" srcset="/img/loading.gif" alt="image-20200421102229848"></p><h5 id="6判断细胞所处时期"><a class="markdownIt-Anchor" href="#6判断细胞所处时期"></a> 6.判断细胞所处时期</h5><p>①根据细胞形态判断前、中、后、末。</p><p>②判断分裂方式</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421102953469.png" srcset="/img/loading.gif" alt="image-20200421102953469"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421103035135.png" srcset="/img/loading.gif" alt="image-20200421103035135"></p><h6 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h6><p>1.请分别指出下列细胞所处时期</p><p>2.写出细胞A、B、E 、I 、K、L的名称（如初级精母细胞） ，可能存在多种情况</p><p>3.写出细胞A、B、I 、D、L分裂后对应子细胞的名称</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421195808792.png" srcset="/img/loading.gif" alt="image-20200421195808792"></p><h4 id="二-受精作用"><a class="markdownIt-Anchor" href="#二-受精作用"></a> 二、受精作用</h4><h5 id="1配子中染色体组合的多样性"><a class="markdownIt-Anchor" href="#1配子中染色体组合的多样性"></a> 1.配子中染色体组合的多样性</h5><p>不考虑非姐妹染色单体交叉互换：可产生<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>23</mn></msup></mrow><annotation encoding="application/x-tex">2^{23}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8141079999999999em;vertical-align:0"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span>种配子</p><h5 id="2受精作用"><a class="markdownIt-Anchor" href="#2受精作用"></a> 2.受精作用</h5><p>受精卵中的染色体数目又恢复到体细胞中的数目，保证了物种染色体数目的稳定，其中有一半的染色体来自精子（父方），另一半来自卵细胞（母方）。</p><h3 id="第-2-节-基因在染色体上"><a class="markdownIt-Anchor" href="#第-2-节-基因在染色体上"></a> 第 2 节 基因在染色体上</h3><h4 id="一-萨顿的假说"><a class="markdownIt-Anchor" href="#一-萨顿的假说"></a> 一、萨顿的假说</h4><p>基因（遗传因子）是由染色体携带者从亲代传递给下一代的。基因就在染色体上，因为<strong>基因和染色体的行为存在着明显的平行关系</strong>。</p><h4 id="二-基因位于染色体上的实验证据"><a class="markdownIt-Anchor" href="#二-基因位于染色体上的实验证据"></a> 二、基因位于染色体上的实验证据</h4><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421205035045.png" srcset="/img/loading.gif" alt="image-20200421205035045"></p><p>美国生物学家摩根，第一次用实验证明了基因在染色体上。</p><h4 id="三-孟德尔遗传规律的现代解释"><a class="markdownIt-Anchor" href="#三-孟德尔遗传规律的现代解释"></a> 三、孟德尔遗传规律的现代解释</h4><p><strong>基因分离定律的实质是：在杂合子的细胞中，位于一堆同源染色体上的等位基因，具有一定的独立性；在减数分裂形成配子的过程中，等位基因会随同源染色体的分开而分离，分别进入两个配子中，独立地随配子遗传给后代。</strong></p><p><strong>基因的自由组合定律的实质是：位于非同源染色体上的非等位基因的分离和组合是互不干扰的；在减数分裂的过程中，同源染色体上的等位基因彼此分离的同时，非同源染色体上的非等位基因自由组合。</strong></p><h4 id="四-常染色体遗传病"><a class="markdownIt-Anchor" href="#四-常染色体遗传病"></a> 四、常染色体遗传病</h4><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421211924107.png" srcset="/img/loading.gif" alt="image-20200421211924107"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421212028665.png" srcset="/img/loading.gif" alt="image-20200421212028665"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421212156023.png" srcset="/img/loading.gif" alt="image-20200421212156023"></p><h3 id="第-3-节-伴性遗传"><a class="markdownIt-Anchor" href="#第-3-节-伴性遗传"></a> 第 3 节 伴性遗传</h3><p><em>基因位于性染色体上，所以遗传上总是和性别相关联，这种现象叫做<strong>伴性遗传</strong>。</em></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421211603540.png" srcset="/img/loading.gif" alt="image-20200421211603540"></p><h4 id="一-人类红绿色盲伴x隐"><a class="markdownIt-Anchor" href="#一-人类红绿色盲伴x隐"></a> 一、人类红绿色盲（伴X隐）</h4><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421212648578.png" srcset="/img/loading.gif" alt="image-20200421212648578"></p><h4 id="二-抗维生素d佝偻病伴x显"><a class="markdownIt-Anchor" href="#二-抗维生素d佝偻病伴x显"></a> 二、抗维生素D佝偻病（伴X显）</h4><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421212247437.png" srcset="/img/loading.gif" alt="image-20200421212247437"></p><h4 id="三-外耳道多毛症伴y"><a class="markdownIt-Anchor" href="#三-外耳道多毛症伴y"></a> 三、外耳道多毛症（伴Y）</h4><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200421212801148.png" srcset="/img/loading.gif" alt="image-20200421212801148"></p><h2 id="第-3-章-基因的本质"><a class="markdownIt-Anchor" href="#第-3-章-基因的本质"></a> 第 3 章 基因的本质</h2><h3 id="第-1-节-dna是主要的遗传物质"><a class="markdownIt-Anchor" href="#第-1-节-dna是主要的遗传物质"></a> 第 1 节 DNA是主要的遗传物质</h3><h4 id="一-对遗传物质的早期推测"><a class="markdownIt-Anchor" href="#一-对遗传物质的早期推测"></a> 一、对遗传物质的早期推测</h4><p><em>脱氧核苷酸（DNA）的组成包括<strong>磷酸</strong>、<strong>碱基</strong>和<strong>脱氧核糖</strong>。</em></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424103158871.png" srcset="/img/loading.gif" alt="image-20200424103158871"></p><h4 id="二-肺炎链球菌的转化实验"><a class="markdownIt-Anchor" href="#二-肺炎链球菌的转化实验"></a> 二、肺炎链球菌的转化实验</h4><h5 id="1格里菲斯的实验"><a class="markdownIt-Anchor" href="#1格里菲斯的实验"></a> 1.格里菲斯的实验。</h5><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200422142440634.png" srcset="/img/loading.gif" alt="image-20200422142440634"></p><p>由此可以推断：已经加热致死的S型细菌，含有某种促使R型或细菌转化为S型或细菌的活性物质——转化因子。</p><h5 id="2艾弗里体外转化实验"><a class="markdownIt-Anchor" href="#2艾弗里体外转化实验"></a> 2.艾弗里体外转化实验</h5><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424103244023.png" srcset="/img/loading.gif" alt="image-20200424103244023"></p><p><strong>结论：DNA才是使R型细菌产生稳定遗传变化的物质。</strong></p><h4 id="三-噬菌体侵染细菌的实验赫尔希-蔡斯"><a class="markdownIt-Anchor" href="#三-噬菌体侵染细菌的实验赫尔希-蔡斯"></a> 三、噬菌体侵染细菌的实验（赫尔希、蔡斯）</h4><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424103311280.png" srcset="/img/loading.gif" alt="image-20200424103311280"></p><p>后来的实验证明，遗传物质除DNA外，还有RNA。<strong>因为绝大多数生物的遗传物质是DNA，所以说DNA是主要的遗传物质。</strong></p><h3 id="第-2-节-dna的结构"><a class="markdownIt-Anchor" href="#第-2-节-dna的结构"></a> 第 2 节 DNA的结构</h3><h4 id="一-dna双螺旋结构模型的构建"><a class="markdownIt-Anchor" href="#一-dna双螺旋结构模型的构建"></a> 一、DNA双螺旋结构模型的构建</h4><p>1.发现者：沃森、克里克</p><h4 id="二-dna的结构"><a class="markdownIt-Anchor" href="#二-dna的结构"></a> 二、DNA的结构</h4><p>DNA双螺旋结构的主要特点如下：</p><p>（1）DNA是由两条单链组成的，这两条链按反向平行方式盘旋成双螺旋结构。</p><p>（2）DNA中的脱氧核糖和磷酸交替连接，排列在外侧，构成基本骨架；碱基排列在内侧。</p><p>（3）两条链上的碱基通过氢键连接成碱基对，并且碱基配对具有一定的规律：A（腺嘌呤）一定与T（胸腺嘧啶）配对；G（鸟嘌呤）一定与C（胞嘧啶）配对。<strong>碱基之间的这种一一对应的关系，叫作碱基互补配对原则。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200422231002131.png" srcset="/img/loading.gif" alt="image-20200422231002131"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424103414981.png" srcset="/img/loading.gif" alt="image-20200424103414981"></p><h3 id="第-3-节-dna的复制"><a class="markdownIt-Anchor" href="#第-3-节-dna的复制"></a> 第 3 节 DNA的复制</h3><h4 id="一-对dna复制的推测"><a class="markdownIt-Anchor" href="#一-对dna复制的推测"></a> 一、对DNA复制的推测</h4><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424103618354.png" srcset="/img/loading.gif" alt="image-20200424103618354"></p><h5 id="1半保留复制"><a class="markdownIt-Anchor" href="#1半保留复制"></a> 1.半保留复制</h5><p>DNA复制时，DNA双螺旋解开，互补的碱基之间的氢键断裂，解开的两条单链分别作为复制的模板，游离的脱氧核苷酸根据碱基互补配对原则，通过形成氢键，结合到作为模板的单链上。由于新合成的每个DNA分子中，都保留了原来DNA分子中的一条链，因此，这种复制方式称作<strong>半保留复制</strong>。</p><h5 id="2全保留复制"><a class="markdownIt-Anchor" href="#2全保留复制"></a> 2.全保留复制</h5><p><strong>全保留复制</strong>是指DNA复制以DNA双链为模板，子代DNA的双链都是新合成的。</p><h4 id="二-dna半保留复制的实验证据"><a class="markdownIt-Anchor" href="#二-dna半保留复制的实验证据"></a> 二、DNA半保留复制的实验证据</h4><p>1958年，梅塞尔森和斯塔尔以大肠杆菌为实验材料，运用<strong>同位素标记技术</strong>，设计了一个巧妙的实验。</p><p>原理：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mn>15</mn></msup><mi>N</mi></mrow><annotation encoding="application/x-tex">^{15}N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8141079999999999em;vertical-align:0"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:.10903em">N</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mn>14</mn></msup><mi>N</mi></mrow><annotation encoding="application/x-tex">^{14}N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8141079999999999em;vertical-align:0"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:.10903em">N</span></span></span></span>相对原子质量不同，利用离心技术区分复制后DNA的质量。</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200423204243829.png" srcset="/img/loading.gif" alt="image-20200423204243829"></p><h4 id="三-dna复制的过程"><a class="markdownIt-Anchor" href="#三-dna复制的过程"></a> 三、DNA复制的过程</h4><p><em>DNA的<strong>复制</strong>是指以亲代DNA为模板合成子代DNA的过程。</em></p><p>模板：DNA双链</p><p>场所： 细胞核</p><p>原料：游离的脱氧核苷酸</p><p>能量：ATP</p><p>酶：解旋酶、DNA聚合酶</p><p>1.解旋：在细胞提供的能量的驱动下，解旋酶将DNA双螺旋的两条链解开，这个过程叫作解旋。</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424104635229.png" srcset="/img/loading.gif" alt="image-20200424104635229"></p><p><strong>DNA复制是一个边解旋边复制的过程，需要模板、原料、能量和酶等基本条件。DNA独特的双螺旋结构，为复制提供了精确的模板，通过碱基互补配对，保证了复制能够准确地进行。</strong></p><h3 id="第-4-节-基因通常是具有遗传效应的dna片段"><a class="markdownIt-Anchor" href="#第-4-节-基因通常是具有遗传效应的dna片段"></a> 第 4 节 基因通常是具有遗传效应的DNA片段</h3><h4 id="一-说明基因与dna关系的实例"><a class="markdownIt-Anchor" href="#一-说明基因与dna关系的实例"></a> 一、说明基因与DNA关系的实例</h4><p>1.大肠杆菌基因数小于碱基对数，每个基因的平均长度约为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">1\times10^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.72777em;vertical-align:-.08333em"></span><span class="mord">1</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.8141079999999999em;vertical-align:0"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>个碱基对</p><p>2.水母的DNA上的碱基对片段——绿色荧光基因</p><p>3.人类构成基因的碱基数占碱基总数的比例不超过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">2\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.80556em;vertical-align:-.05556em"></span><span class="mord">2</span><span class="mord">%</span></span></span></span></p><h4 id="二-dna片段中的遗传信息"><a class="markdownIt-Anchor" href="#二-dna片段中的遗传信息"></a> 二、DNA片段中的遗传信息</h4><p>**遗传信息蕴藏在4种碱基的排列顺序之中；碱基排列顺序的千变万化，构成了DNA的多样性，而碱基特定的排列顺序，又构成了每个DNA分子的特异性；**DNA的多样性和特异性是生物体多样性和特异性的物质基础。</p><p><strong>基因通常是具有遗传效应的DNA片段。</strong></p><h2 id="第-4-章-基因的表达"><a class="markdownIt-Anchor" href="#第-4-章-基因的表达"></a> 第 4 章 基因的表达</h2><h3 id="第-1-节-基因指导蛋白质的合成"><a class="markdownIt-Anchor" href="#第-1-节-基因指导蛋白质的合成"></a> 第 1 节 基因指导蛋白质的合成</h3><h4 id="一-遗传信息的转录"><a class="markdownIt-Anchor" href="#一-遗传信息的转录"></a> 一、遗传信息的转录</h4><p><em>RNA是在细胞核中，通过RNA聚合酶以DNA的一条链为模板合成的，这一过程叫做<strong>转录</strong>。</em></p><p>场所：细胞核、线粒体、叶绿体/拟核</p><p>模板：DNA的一条链</p><p>原料：核糖核苷酸</p><p>能量：需要能量</p><p>酶：RNA聚合酶</p><h5 id="1rna"><a class="markdownIt-Anchor" href="#1rna"></a> 1.RNA</h5><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424101857872.png" srcset="/img/loading.gif" alt="image-20200424101857872"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424101917221.png" srcset="/img/loading.gif" alt="image-20200424101917221"></p><p>信使RNA（mRNA）、核糖体RNA（rRNA）、转运RNA（tRNA）</p><h5 id="2dna转录过程"><a class="markdownIt-Anchor" href="#2dna转录过程"></a> 2.DNA转录过程</h5><p><em>通过DNA来合成RNA的过程</em></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200424104817959.png" srcset="/img/loading.gif" alt="image-20200424104817959"></p><h4 id="二-遗传信息的翻译"><a class="markdownIt-Anchor" href="#二-遗传信息的翻译"></a> 二、遗传信息的翻译</h4><p><em>游离在细胞质中的各种氨基酸，就以mRNA为模板合成具有一定氨基酸顺序的蛋白质，这一过程叫做<strong>翻译</strong>。</em></p><p>模板：mRNA</p><p>场所：核糖体</p><p>原料：游离的氨基酸</p><h5 id="1mrna的碱基与氨基酸之间的对应关系"><a class="markdownIt-Anchor" href="#1mrna的碱基与氨基酸之间的对应关系"></a> 1.mRNA的碱基与氨基酸之间的对应关系</h5><p><strong>3个碱基决定一个RNA</strong></p><h5 id="2密码子表"><a class="markdownIt-Anchor" href="#2密码子表"></a> 2.密码子表</h5><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200425233427182.png" srcset="/img/loading.gif" alt="image-20200425233427182"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200503115439713.png" srcset="/img/loading.gif" alt="image-20200503115439713"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200425233558681.png" srcset="/img/loading.gif" alt="image-20200425233558681"></p><h4 id="三-中心法则"><a class="markdownIt-Anchor" href="#三-中心法则"></a> 三、中心法则</h4><p><em>在遗传学中处于中心地位的法则</em></p><p><strong>遗传信息可以从DNA流向RNA，即DNA的复制；也可以从DNA流向RNA，进而流向蛋白质，即遗传信息的转录和翻译。</strong></p><p><strong>生命是物质、能量和信息的统一体。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/biology/book2/image-20200503120748807.png" srcset="/img/loading.gif" alt="image-20200503120748807"></p><p>对比表格：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">DNA复制</th><th style="text-align:center">转录</th><th style="text-align:center">翻译</th></tr></thead><tbody><tr><td style="text-align:center">场所</td><td style="text-align:center">细胞核、线粒体、叶绿体 / 拟核</td><td style="text-align:center">细胞核、线粒体、叶绿体 / 拟核</td><td style="text-align:center">核糖体</td></tr><tr><td style="text-align:center">模板</td><td style="text-align:center">DNA的两条链</td><td style="text-align:center">DNA的一条链</td><td style="text-align:center">mRNA</td></tr><tr><td style="text-align:center">原料</td><td style="text-align:center">脱氧核苷酸</td><td style="text-align:center">核糖核苷酸</td><td style="text-align:center">氨基酸</td></tr><tr><td style="text-align:center">能量</td><td style="text-align:center">需要能量</td><td style="text-align:center">需要能量</td><td style="text-align:center">需要能量</td></tr><tr><td style="text-align:center">酶</td><td style="text-align:center">解旋酶、DNA聚合酶</td><td style="text-align:center">RNA聚合酶</td><td style="text-align:center">多种酶</td></tr></tbody></table><h3 id="第-2-节-基因表达与性状的关系"><a class="markdownIt-Anchor" href="#第-2-节-基因表达与性状的关系"></a> 第 2 节 基因表达与性状的关系</h3><h4 id="一-基因表达产物与性状的关系"><a class="markdownIt-Anchor" href="#一-基因表达产物与性状的关系"></a> 一、基因表达产物与性状的关系</h4><p><strong>基因通过控制酶的合成来控制代谢过程，进而控制生物体的性状。</strong></p><p><strong>基因还能通过控制蛋白质的结构直接控制生物体的性状。</strong></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --&gt;&lt;h1 id=&quot;生物学-必修-2-遗传与进化&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#生物学-必修-2-遗传与进化&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="生物" scheme="https://wtrwx.top/categories/%E7%94%9F%E7%89%A9/"/>
    
    
      <category term="生物" scheme="https://wtrwx.top/tags/%E7%94%9F%E7%89%A9/"/>
    
  </entry>
  
  <entry>
    <title>Android签名文件更换通知</title>
    <link href="https://wtrwx.top/20200413/android-signature-file-replacement-notice.html"/>
    <id>https://wtrwx.top/20200413/android-signature-file-replacement-notice.html</id>
    <published>2020-04-13T11:04:37.000Z</published>
    <updated>2020-04-13T11:30:02.642Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --><p>由于不可控因素，本人的AndroidApk签名文件遗失。即日起所有Apk签名文件发生变化，不可覆盖安装。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;由于不可控因素，本人的AndroidApk签名文件遗失。即日起所有Apk签名文件发生变化，不可覆盖安装。&lt;/p&gt;&lt;!-- rebuild by nea
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>彻底清除Windows智能云输入法</title>
    <link href="https://wtrwx.top/20200331/completely-remove-windows-smart-cloud-input-method.html"/>
    <id>https://wtrwx.top/20200331/completely-remove-windows-smart-cloud-input-method.html</id>
    <published>2020-03-31T15:37:26.000Z</published>
    <updated>2020-04-01T00:07:59.125Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --><p>刚刚电脑好好用着突然输入不了中文，一看输入法栏多出一个不认识的图标，名字叫智能云输入法。</p><p>程序列表找不到，全局搜SmartCloudInput删掉之后重启还会出现，推断是写进注册表了，百度一看，果不其然，老流氓软件了（火绒形同虚设）。</p><p>下面上清除方案：</p><p>1.Win+R快捷方式调出运行，输入<code>regedit</code>运行打开注册表，随便选中一个右键搜索，输入<code>智能云</code>。搜完之后找到那一项的所有内容，右键删掉。</p><p>2.C盘搜<code>SmartCloudInput</code>，用杀毒软件粉碎掉。</p><p>3.重新启动，完美解决。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;刚刚电脑好好用着突然输入不了中文，一看输入法栏多出一个不认识的图标，名字叫智能云输入法。&lt;/p&gt;&lt;p&gt;程序列表找不到，全局搜SmartCloudInp
      
    
    </summary>
    
    
      <category term="Windows" scheme="https://wtrwx.top/categories/Windows/"/>
    
    
      <category term="Windows" scheme="https://wtrwx.top/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>博客美化日志</title>
    <link href="https://wtrwx.top/20200322/blog-beautification-log.html"/>
    <id>https://wtrwx.top/20200322/blog-beautification-log.html</id>
    <published>2020-03-22T12:15:00.000Z</published>
    <updated>2020-04-08T13:54:15.041Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --><h2 id="1根据时间切换背景"><a class="markdownIt-Anchor" href="#1根据时间切换背景"></a> 1.根据时间切换背景</h2><p>先把原来<code>layout.ejs</code>中根据<code>config.yml</code>设置背景的代码删了，调整一下样式。</p><p>不多废话了，直接上代码，简单得很。</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript">  (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{    <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();    <span class="hljs-keyword">var</span> hour = date.getHours();    <span class="hljs-keyword">var</span> bgView = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"background"</span>);    <span class="hljs-keyword">if</span> (hour &gt;= <span class="hljs-number">6</span> &amp;&amp; hour &lt; <span class="hljs-number">16</span>) {      bgView.style.backgroundImage = <span class="hljs-string">"url(https://example.com/example2.png)"</span>    }    <span class="hljs-keyword">if</span> (hour &gt;= <span class="hljs-number">16</span> &amp;&amp; hour &lt; <span class="hljs-number">19</span>) {      bgView.style.backgroundImage = <span class="hljs-string">"url(https://example.com/example3.png)"</span>    }    <span class="hljs-keyword">if</span> (hour &gt;= <span class="hljs-number">21</span> || hour &lt; <span class="hljs-number">7</span>) {      bgView.style.backgroundImage = <span class="hljs-string">"url(https://example.com/example4.png)"</span>    }  })();</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h2 id="2添加夜间模式"><a class="markdownIt-Anchor" href="#2添加夜间模式"></a> 2.添加夜间模式</h2><p>照例，先上代码。这是body部分的css，具体基本覆盖所有class，太冗长了，感兴趣的可以F12扒一下我的。</p><pre class="highlight"><code class="stylus"><span class="hljs-comment">/* 夜间模式 */</span><span class="hljs-selector-tag">body</span><span class="hljs-selector-class">.dark</span> { <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#212121</span>; <span class="hljs-attribute">color</span>: <span class="hljs-number">#cccccc</span>; <span class="hljs-selector-tag">a</span> {  <span class="hljs-attribute">color</span>: <span class="hljs-number">#e1e1e1</span>;  &amp;:hover {   <span class="hljs-attribute">color</span>: <span class="hljs-number">#82b1ff</span>;  } }}</code></pre><p>然后是js，太冗长了。用了大量if，可读性比较差，用switch重写效果应该也不太好，先这样吧。</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">closeDarkMode0</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-built_in">document</span>.body.classList.remove(<span class="hljs-string">'dark'</span>);        <span class="hljs-built_in">document</span>.cookie = <span class="hljs-string">"dark=0;path=/"</span>        bgView.style.backgroundImage = <span class="hljs-string">"url(https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/background.png)"</span>        header.style.height = <span class="hljs-string">"100%"</span>;        <span class="hljs-comment">//console.log('夜间模式关闭0');</span>    }    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">openDarkMode1</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-built_in">document</span>.body.classList.add(<span class="hljs-string">'dark'</span>);        <span class="hljs-built_in">document</span>.cookie = <span class="hljs-string">"dark=1;path=/"</span>        bgView.style.backgroundImage = <span class="hljs-string">""</span>        header.style.height = <span class="hljs-string">"50%"</span>;        <span class="hljs-comment">//console.log('夜间模式开启1');</span>    }    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">closeDarkMode2</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-built_in">document</span>.body.classList.remove(<span class="hljs-string">'dark'</span>);        <span class="hljs-built_in">document</span>.cookie = <span class="hljs-string">"dark=2;path=/"</span>        bgView.style.backgroundImage = <span class="hljs-string">"url(https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/background.png)"</span>        header.style.height = <span class="hljs-string">"100%"</span>;        <span class="hljs-comment">//console.log('夜间模式关闭2');</span>    }    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">openDarkMode3</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-built_in">document</span>.body.classList.add(<span class="hljs-string">'dark'</span>);        <span class="hljs-built_in">document</span>.cookie = <span class="hljs-string">"dark=3;path=/"</span>        bgView.style.backgroundImage = <span class="hljs-string">""</span>        header.style.height = <span class="hljs-string">"50%"</span>;        <span class="hljs-comment">//console.log('夜间模式开启3');</span>    }    (<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();        <span class="hljs-keyword">var</span> hour = date.getHours();        <span class="hljs-keyword">var</span> dark = <span class="hljs-built_in">document</span>.cookie.replace(<span class="hljs-regexp">/(?:(?:^|.*;\s*)dark\s*\=\s*([^;]*).*$)|^.*$/</span>, <span class="hljs-string">"$1"</span>);        <span class="hljs-keyword">if</span> (matchMedia(<span class="hljs-string">'(prefers-color-scheme: dark)'</span>).matches) {            openDarkMode3();        } <span class="hljs-keyword">else</span> {            <span class="hljs-keyword">if</span> (hour &gt;= <span class="hljs-number">21</span> || hour &lt; <span class="hljs-number">7</span>) {                <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">''</span> || dark == <span class="hljs-string">'0'</span> || dark == <span class="hljs-string">'1'</span> || dark == <span class="hljs-string">'3'</span>) {                    openDarkMode3();                } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">'2'</span>) {                    closeDarkMode2();                }            } <span class="hljs-keyword">else</span> {                <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">''</span> || dark == <span class="hljs-string">'0'</span> || dark == <span class="hljs-string">'3'</span>) {                    closeDarkMode0();                } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">'2'</span>) {                    closeDarkMode2();                }                <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">'1'</span>) {                    openDarkMode1();                }            }        }    })();    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">switchDarkMode</span>(<span class="hljs-params"></span>) </span>{        <span class="hljs-keyword">var</span> dark = <span class="hljs-built_in">document</span>.cookie.replace(<span class="hljs-regexp">/(?:(?:^|.*;\s*)dark\s*\=\s*([^;]*).*$)|^.*$/</span>, <span class="hljs-string">"$1"</span>);        <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();        <span class="hljs-keyword">var</span> hour = date.getHours();        <span class="hljs-keyword">if</span> (hour &gt;= <span class="hljs-number">21</span> || hour &lt; <span class="hljs-number">7</span>) {            <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">'1'</span> || dark == <span class="hljs-string">'3'</span>) {                closeDarkMode2();            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">'2'</span>) {                openDarkMode1();            }        } <span class="hljs-keyword">else</span> {            <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">'0'</span> || dark == <span class="hljs-string">'2'</span>) {                openDarkMode1();            } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (dark == <span class="hljs-string">'1'</span> || dark == <span class="hljs-string">'3'</span>) {                closeDarkMode0();            }        }    }</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h2 id="3自定义滚动条样式"><a class="markdownIt-Anchor" href="#3自定义滚动条样式"></a> 3.自定义滚动条样式</h2><p>在<code>\myBlog\themes\fluid\source\css\_pages\_base\base.styl</code>中添加以下代码。</p><pre class="highlight"><code class="stylus"><span class="hljs-comment">/* 自定义滚动条 */</span><span class="hljs-comment">/* 定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸 */</span>::-webkit-scrollbar {  <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;  <span class="hljs-attribute">height</span>: <span class="hljs-number">16px</span>;}<span class="hljs-comment">/* 定义滚动条轨道 */</span>::-webkit-scrollbar-track {  <span class="hljs-attribute">background-color</span>: rgba(<span class="hljs-number">227</span>, <span class="hljs-number">242</span>, <span class="hljs-number">253</span>, <span class="hljs-number">1</span>);}<span class="hljs-comment">/* 定义滑块 */</span>::-webkit-scrollbar-thumb {  <span class="hljs-attribute">background-color</span>: rgba(<span class="hljs-number">26</span>, <span class="hljs-number">115</span>, <span class="hljs-number">232</span>, <span class="hljs-number">0.502</span>);}</code></pre><h2 id="4添加sncakbar"><a class="markdownIt-Anchor" href="#4添加sncakbar"></a> 4.添加Sncakbar</h2><p>Snackbar是Android挺好用的一个组件，用css仿一下吧，效果可以点代码框旁边的copy体验。</p><p>这部分是抄<a href="https://c.runoob.com/codedemo/3145" target="_blank" rel="noopener">菜鸟工具</a>的。</p><pre class="highlight"><code class="stylus"><span class="hljs-selector-id">#snackbar</span> {  <span class="hljs-attribute">visibility</span>: hidden;  <span class="hljs-attribute">min-width</span>: <span class="hljs-number">300px</span>;  <span class="hljs-attribute">margin-left</span>: -<span class="hljs-number">150px</span>;  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#323232</span>;  <span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;  <span class="hljs-attribute">text-align</span>: center;  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">2px</span>;  <span class="hljs-attribute">padding</span>: <span class="hljs-number">12px</span>;  <span class="hljs-attribute">position</span>: fixed;  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">4</span>;  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0px</span>;  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;}<span class="hljs-selector-id">#snackbar</span><span class="hljs-selector-class">.show</span> {  <span class="hljs-attribute">visibility</span>: visible;  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">4</span>;  -webkit-<span class="hljs-attribute">animation</span>: fadein <span class="hljs-number">0.5s</span>, fadeout <span class="hljs-number">0.5s</span> <span class="hljs-number">2.5s</span>;  <span class="hljs-attribute">animation</span>: fadein <span class="hljs-number">0.5s</span>, fadeout <span class="hljs-number">0.5s</span> <span class="hljs-number">2.5s</span>;}@keyframes fadein {  from {    <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">20px</span>;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;  }  to {    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;  }}@keyframes fadein {  from {    <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">20</span>;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;  }  to {    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;  }}@keyframes fadeout {  from {    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;  }  to {    <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">20px</span>;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;  }}@keyframes fadeout {  from {    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;  }  to {    <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">20px</span>;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;  }}</code></pre><p>html：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"snackbar"</span>&gt;</span>内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><p>js：</p><pre class="highlight"><code class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">showSnackbar</span>(<span class="hljs-params">text</span>) </span>{  <span class="hljs-keyword">var</span> x = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"snackbar"</span>)  x.innerHTML = text;  x.className = <span class="hljs-string">"show"</span>;  setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{  x.className = x.className.replace(<span class="hljs-string">"show"</span>, <span class="hljs-string">""</span>);  }, <span class="hljs-number">3000</span>);}</code></pre><p>调用方法：</p><pre class="highlight"><code class="javascript">showSnackbar(<span class="hljs-string">"提示内容"</span>);</code></pre><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --&gt;&lt;h2 id=&quot;1根据时间切换背景&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1根据时间切换背景&quot;&gt;&lt;/a&gt; 1.根据时间切
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://wtrwx.top/categories/JavaScript/"/>
    
    
      <category term="Blog" scheme="https://wtrwx.top/tags/Blog/"/>
    
      <category term="JavaScript" scheme="https://wtrwx.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>一些经常用到的Java代码</title>
    <link href="https://wtrwx.top/20200310/some-frequently-used-java-code.html"/>
    <id>https://wtrwx.top/20200310/some-frequently-used-java-code.html</id>
    <published>2020-03-10T14:42:24.000Z</published>
    <updated>2020-03-15T10:45:38.000Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --><blockquote><p>以下代码或来自于网络或是自己原创，未能及时注明原出处。如有侵权，请通过关于页的联系方式联系我。</p></blockquote><h3 id="1检测是否连接代理"><a class="markdownIt-Anchor" href="#1检测是否连接代理"></a> 1.检测是否连接代理</h3><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isWifiProxy</span><span class="hljs-params">(Context context)</span></span>{<span class="hljs-keyword">final</span> <span class="hljs-keyword">boolean</span> IS_ICS_OR_LATER = android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH;String proxyAddress;    <span class="hljs-keyword">int</span> proxyPort;    <span class="hljs-keyword">if</span> (IS_ICS_OR_LATER){        proxyAddress = System.getProperty(<span class="hljs-string">"http.proxyHost"</span>);        String portStr = System.getProperty(<span class="hljs-string">"http.proxyPort"</span>);        proxyPort = Integer.parseInt((portStr != <span class="hljs-keyword">null</span> ? portStr : <span class="hljs-string">"-1"</span>));    }<span class="hljs-keyword">else</span>{        proxyAddress = android.net.Proxy.getHost(context);        proxyPort = android.net.Proxy.getPort(context);    }    <span class="hljs-keyword">return</span> (!TextUtils.isEmpty(proxyAddress)) &amp;&amp; (proxyPort != -<span class="hljs-number">1</span>);}</code></pre><h3 id="2控件连续点击事件"><a class="markdownIt-Anchor" href="#2控件连续点击事件"></a> 2.控件连续点击事件</h3><pre class="highlight"><code class="java"><span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> COUNTS = <span class="hljs-number">7</span>;<span class="hljs-comment">// 点击次数</span><span class="hljs-keyword">final</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">long</span> DURATION = <span class="hljs-number">1500</span>;<span class="hljs-comment">// 规定有效时间</span><span class="hljs-keyword">long</span>[] mHits = <span class="hljs-keyword">new</span> <span class="hljs-keyword">long</span>[COUNTS];<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>{    continuousClick(COUNTS, DURATION);}<span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">continuousClick</span><span class="hljs-params">(<span class="hljs-keyword">int</span> count, <span class="hljs-keyword">long</span> time)</span> </span>{    <span class="hljs-comment">//每次点击时，数组向前移动一位</span>    System.arraycopy(mHits, <span class="hljs-number">1</span>, mHits, <span class="hljs-number">0</span>, mHits.length - <span class="hljs-number">1</span>);    <span class="hljs-comment">//为数组最后一位赋值</span>    mHits[mHits.length - <span class="hljs-number">1</span>] = SystemClock.uptimeMillis();    <span class="hljs-keyword">if</span> (mHits[<span class="hljs-number">0</span>] &gt;= (SystemClock.uptimeMillis() - DURATION)) {        mHits = <span class="hljs-keyword">new</span> <span class="hljs-keyword">long</span>[COUNTS];<span class="hljs-comment">//重新初始化数组</span>        Toast.makeText(<span class="hljs-keyword">this</span>, <span class="hljs-string">"连续点击了7次"</span>, Toast.LENGTH_LONG).show();    }}</code></pre><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --&gt;&lt;blockquote&gt;&lt;p&gt;以下代码或来自于网络或是自己原创，未能及时注明原出处。如有侵权，请通过关于页的联系方式联系我。&lt;/p&gt;&lt;/blockquote
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Todo-list</title>
    <link href="https://wtrwx.top/20200301/todolist.html"/>
    <id>https://wtrwx.top/20200301/todolist.html</id>
    <published>2020-03-01T04:57:16.000Z</published>
    <updated>2020-05-03T10:32:04.119Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --><h1 id="202003"><a class="markdownIt-Anchor" href="#202003"></a> 2020.03</h1><p><s>1.背语文必背文言文。</s><br><s>2.背英语book3单词。</s><br><s>3.复习数学三角函数/平面向量。</s><br>4.改善语数英物化生作业质量。<br>5.继续看物竞教程，刷力学题。<br><s>6.学电学新课。</s><br><s>7.有时间就看Java，研究下smali。</s></p><p>总结：转眼一个月过去了…Todo果然咕了好多。大幅优化了博客加载时间，写好了博客的夜间模式，效果还不错。在三月的最后一天再Github上托管了第一个正经的项目（虽然是逆向），还是挺开心的吧，欢迎去我Github主页star，哦对还学了xposed模块的开发，只能是大致了解hook原理的方法了吧…没什么实战。</p><h1 id="202004"><a class="markdownIt-Anchor" href="#202004"></a> 2020.04</h1><p>1.背语文必背文言文。<br><s>2.背英语book3单词。</s><br><s>3.复习数学三角函数。</s><br><s>4.改善语数英物化生作业质量。</s><br>5.继续看物竞教程，刷力学题。<br><s>6.学电学新课。</s><br><s>7.有时间就看Java，研究下smali。</s></p><h1 id="202005"><a class="markdownIt-Anchor" href="#202005"></a> 2020.05</h1><p>1.日常作业</p><p>2.准备开学</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --&gt;&lt;h1 id=&quot;202003&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#202003&quot;&gt;&lt;/a&gt; 2020.03&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="Todo" scheme="https://wtrwx.top/categories/Todo/"/>
    
    
      <category term="Todo" scheme="https://wtrwx.top/tags/Todo/"/>
    
  </entry>
  
  <entry>
    <title>质点的直线运动与刚体转动的比较</title>
    <link href="https://wtrwx.top/20200228/comparison-of-linear-motion-particle-and-rotation-rigid-body.html"/>
    <id>https://wtrwx.top/20200228/comparison-of-linear-motion-particle-and-rotation-rigid-body.html</id>
    <published>2020-02-28T15:10:56.000Z</published>
    <updated>2020-04-08T13:54:14.490Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/13.1.jpg" srcset="/img/loading.gif" alt="13.1.jpg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/13.1.jpg&quot; srcset=&quot;/img
      
    
    </summary>
    
    
      <category term="物理竞赛" scheme="https://wtrwx.top/categories/%E7%89%A9%E7%90%86%E7%AB%9E%E8%B5%9B/"/>
    
    
      <category term="物理" scheme="https://wtrwx.top/tags/%E7%89%A9%E7%90%86/"/>
    
      <category term="力学" scheme="https://wtrwx.top/tags/%E5%8A%9B%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Bmap V7.0.72 破解</title>
    <link href="https://wtrwx.top/20200226/bmap-v7072-crack.html"/>
    <id>https://wtrwx.top/20200226/bmap-v7072-crack.html</id>
    <published>2020-02-26T01:29:03.000Z</published>
    <updated>2020-03-30T13:25:24.832Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --><blockquote><p>昨天Bmap突然涨价了，永久会员从6r涨到88r，支持不起了，于是就有了下文…</p></blockquote><ol start="0"><li><p>先使用MT管理器2去除签名校验（懒得手动找了）</p></li><li><p>找找哪里有这个会员状态的检验</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.1.jpg" srcset="/img/loading.gif" alt="12.1.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.2.jpg" srcset="/img/loading.gif" alt="12.2.jpg"></p><ol start="2"><li>根据文字定位到布局然后根据id找到点击事件</li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.3.jpg" srcset="/img/loading.gif" alt="12.3.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.4.jpg" srcset="/img/loading.gif" alt="12.4.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.5.jpg" srcset="/img/loading.gif" alt="12.5.jpg"></p><ol start="3"><li>转成Java观察一下，这里调用了一个<code>isVipValid</code>方法（其实不转也看得出来）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.6.jpg" srcset="/img/loading.gif" alt="12.6.jpg"></p><ol start="4"><li>到这其实就很明显了，直接跳转到<code>Lme/gfuil/bmap/model/UserInfoModel;</code>这个类，找到这个<code>isVipValid</code>方法，转成Java看一下。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.7.jpg" srcset="/img/loading.gif" alt="12.7.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.8.jpg" srcset="/img/loading.gif" alt="12.8.jpg"></p><ol start="5"><li>大致就是本地判断，是VIP返回true，不是VIP返回false。我们直接把判断删掉，然后返回true就可以了。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/12.9.jpg" srcset="/img/loading.gif" alt="12.9.jpg"></p><pre class="highlight"><code>.method public isVipValid()Z    .registers 6    .line 163    const/4 v0, 0x1    return v0.end method</code></pre><ol start="6"><li>打包签名安装，enjoy it！</li></ol><p>因为作者也是酷安的个人开发者，所以这次不会发成品，本文也只是对破解思路的记录，请勿用于其他用处。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --&gt;&lt;blockquote&gt;&lt;p&gt;昨天Bmap突然涨价了，永久会员从6r涨到88r，支持不起了，于是就有了下文…&lt;/p&gt;&lt;/blockquote&gt;&lt;ol sta
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
      <category term="破解" scheme="https://wtrwx.top/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Mod-apks</title>
    <link href="https://wtrwx.top/20200222/modapks.html"/>
    <id>https://wtrwx.top/20200222/modapks.html</id>
    <published>2020-02-22T10:19:27.000Z</published>
    <updated>2020-05-10T09:20:19.026Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --><p>以下是我参与开发/修改的一些Apk</p><h2 id="社交类"><a class="markdownIt-Anchor" href="#社交类"></a> 社交类</h2><h3 id="1-知乎v6120_mipreinstall_noad"><a class="markdownIt-Anchor" href="#1-知乎v6120_mipreinstall_noad"></a> 1. 知乎V6.12.0_mipreinstall_noAd</h3><p>下载地址：<a href="https://www.lanzous.com/b02mrxt4d" target="_blank" rel="noopener">蓝奏云</a><br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/11.1.jpg" srcset="/img/loading.gif" alt="11.1.jpg"></p><h2 id="工具类"><a class="markdownIt-Anchor" href="#工具类"></a> 工具类</h2><h3 id="1-snp-crack"><a class="markdownIt-Anchor" href="#1-snp-crack"></a> 1. SNP-Crack</h3><p>下载地址：<a href="https://www.lanzous.com/i93q9tg" target="_blank" rel="noopener">蓝奏云</a>（内含有源码和成品）<br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/5.2.jpg" srcset="/img/loading.gif" alt="5.2.jpg"></p><h2 id="娱乐类"><a class="markdownIt-Anchor" href="#娱乐类"></a> 娱乐类</h2><h3 id="1斗鱼直播v608"><a class="markdownIt-Anchor" href="#1斗鱼直播v608"></a> 1.斗鱼直播V6.0.8</h3><p>版本特性：<br>1.精简大量组件<br>2.去除大量广告<br>3.精简软件UI，去除tab栏<br>4.美化UI（图标来自Pelmix图标包）<br>5.默认关闭了“下播后自动跳转到推荐直播间”<br>默认打开了“屏蔽全部特效”等选项<br>6.去除软件检测更新<br>7.更多特性敬请体验<br>下载地址：<a href="https://www.lanzous.com/b01n4imnc" target="_blank" rel="noopener">蓝奏云</a><br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/11.2.jpg" srcset="/img/loading.gif" alt="14.1"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;以下是我参与开发/修改的一些Apk&lt;/p&gt;&lt;h2 id=&quot;社交类&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#社交类&quot;&gt;
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
      <category term="破解" scheme="https://wtrwx.top/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>如何导出你少年派上的课件、视频</title>
    <link href="https://wtrwx.top/20200215/how-to-export-the-courseware-and-video-sent-by-your-teenager.html"/>
    <id>https://wtrwx.top/20200215/how-to-export-the-courseware-and-video-sent-by-your-teenager.html</id>
    <published>2020-02-15T12:56:52.000Z</published>
    <updated>2020-04-08T13:54:14.482Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --><p><strong>友情提示：恶意传播他人劳动产物属于侵权行为，请勿用于非法用途！</strong></p><h1 id="方案一"><a class="markdownIt-Anchor" href="#方案一"></a> 方案一</h1><ol><li>参照我的另一篇博客<a href="https://wtrwx.top/20200206/snpcrack.html">SNP-Crack</a></li><li>使用MT管理器等文件管理器访问目录</li></ol><blockquote><p>/storage/emulated/0/Android/data/com.netspace.myipad/cache/</p></blockquote><p>即可看到pdf文件</p><ol start="3"><li>用HttpCanary等软件抓包</li></ol><h1 id="方案二"><a class="markdownIt-Anchor" href="#方案二"></a> 方案二</h1><ol><li>电脑无线网卡开热点，Pad连接热点</li><li>Wireshark/Fiddler抓包</li></ol><h1 id="方案三推荐"><a class="markdownIt-Anchor" href="#方案三推荐"></a> 方案三（推荐）</h1><ol><li>网络下载CCProxy破解版，用注册机注册好</li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/10.1.jpg" srcset="/img/loading.gif" alt="10.1.jpg"></p><ol start="2"><li>打开设置，按下面的图打开远程拨号，关闭自动检测</li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/10.2.jpg" srcset="/img/loading.gif" alt="10.2.jpg"></p><ol start="3"><li>按下图给Pad设置手动代理<br>代理主机名填刚刚检测的IPv4地址（上图中有）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/10.3.jpg" srcset="/img/loading.gif" alt="10.3.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/10.4.jpg" srcset="/img/loading.gif" alt="10.4.jpg"></p><ol start="4"><li>打开CCProxy，启动服务，点击监控<br>Pad进入少年派设置，清除缓存，再点击你要下载的课件<br>在CC Proxy中可以看到get事件，右键复制url</li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/10.5.jpg" srcset="/img/loading.gif" alt="10.5.png"></p><ol start="5"><li>使用迅雷/IDM等下载管理器下载</li></ol><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;&lt;strong&gt;友情提示：恶意传播他人劳动产物属于侵权行为，请勿用于非法用途！&lt;/strong&gt;&lt;/p&gt;&lt;h1 id=&quot;方案一&quot;&gt;&lt;a class=&quot;
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
      <category term="破解" scheme="https://wtrwx.top/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>如何科学地立扫把？</title>
    <link href="https://wtrwx.top/20200212/how-to-set-up-a-broom-scientifically.html"/>
    <id>https://wtrwx.top/20200212/how-to-set-up-a-broom-scientifically.html</id>
    <published>2020-02-12T14:39:15.000Z</published>
    <updated>2020-03-30T13:25:24.857Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --><blockquote><p>2 月 11 日是个特殊的日子，美国宇航局 NASA 曾经说过这一天地球的引力最小，所以扫把能够站起来。</p></blockquote><p>昨天，大多数人的朋友圈都被这样一条消息加上一张立扫把的图刷爆。实际上决定你扫把能不能立起来的因素和太阳、月亮没什么关系，最重要的一点是——你的刷毛，够硬吗？<br>这里就不得不提到一个抽象的物理量——稳度。顾名思义，稳度就是物体的稳定程度。物体受到扰动，过物体重心的重垂线与支持面的交点只要还在支面内，就不会翻倒，一旦这一交点移出支面，就会失去平衡而翻倒。物理学家又根据不同物体的稳定程度，将平衡状态分为三类：稳定平衡、不稳定平衡、随遇平衡。<br>这类立xx就是一种典型的稳定平衡。其火爆程度，甚至惊动了NASA现身辟谣：<br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/9.1.jpg" srcset="/img/loading.gif" alt="9.1.png"></p><blockquote><p>最后附上中科院物理所的<a href="https://mp.weixin.qq.com/s/YNKjeah1D8hqYs809CYBQA" target="_blank" rel="noopener">科普文章</a><br>里面讲的非常详细~<br>本文部分内容也来源于此，在此表示感谢！</p></blockquote><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --&gt;&lt;blockquote&gt;&lt;p&gt;2 月 11 日是个特殊的日子，美国宇航局 NASA 曾经说过这一天地球的引力最小，所以扫把能够站起来。&lt;/p&gt;&lt;/block
      
    
    </summary>
    
    
      <category term="日常" scheme="https://wtrwx.top/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="物理" scheme="https://wtrwx.top/tags/%E7%89%A9%E7%90%86/"/>
    
      <category term="力学" scheme="https://wtrwx.top/tags/%E5%8A%9B%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>百度网盘限速破解方案</title>
    <link href="https://wtrwx.top/20200210/baidu-network-disk-speed-limit-cracking-solution.html"/>
    <id>https://wtrwx.top/20200210/baidu-network-disk-speed-limit-cracking-solution.html</id>
    <published>2020-02-10T15:28:21.000Z</published>
    <updated>2020-04-16T01:44:19.493Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --><h3 id="一-开百度网盘svip"><a class="markdownIt-Anchor" href="#一-开百度网盘svip"></a> 一、开百度网盘SVIP</h3><p>成本：30元/月<br>缺点：没钱是我的缺点，没有缺点<br>优点：稳定</p><h3 id="二-百度网盘共享账号"><a class="markdownIt-Anchor" href="#二-百度网盘共享账号"></a> 二、百度网盘共享账号</h3><p>成本：价格不等，优质账号贵<br>缺点：不稳定，麻烦</p><h3 id="三-pandownloadvillage"><a class="markdownIt-Anchor" href="#三-pandownloadvillage"></a> 三、<s>Pandownload</s>/village</h3><p>成本：0<br>缺点：手机版不能满速，电脑可以</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/8.1.jpg" srcset="/img/loading.gif" alt="8.1.png"></p><h3 id="四enfi"><a class="markdownIt-Anchor" href="#四enfi"></a> 四：ENFI</h3><p>成本：花钱买流量</p><h3 id="五浏览器idmadm等下载工具"><a class="markdownIt-Anchor" href="#五浏览器idmadm等下载工具"></a> 五：浏览器+idm/adm等下载工具</h3><p>成本：0<br>缺点：不稳定时常失效</p><h3 id="六baidupcs-goaria2服务器"><a class="markdownIt-Anchor" href="#六baidupcs-goaria2服务器"></a> 六：BaiduPCS-Go/Aria2服务器</h3><p>成本：0<br>缺点：上手难度大，需要一定Linux基础。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --&gt;&lt;h3 id=&quot;一-开百度网盘svip&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一-开百度网盘svip&quot;&gt;&lt;/a&gt; 一、开
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
      <category term="破解" scheme="https://wtrwx.top/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Android上写Blog的必备应用</title>
    <link href="https://wtrwx.top/20200208/an-essential-application-for-writing-blogs-on-android.html"/>
    <id>https://wtrwx.top/20200208/an-essential-application-for-writing-blogs-on-android.html</id>
    <published>2020-02-08T15:51:23.000Z</published>
    <updated>2020-04-08T13:54:14.481Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --><p>多图预警<br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/7.1.jpg" srcset="/img/loading.gif" alt="7.1.jpg"><br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/7.2.jpg" srcset="/img/loading.gif" alt="7.2.jpg"><br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/7.3.jpg" srcset="/img/loading.gif" alt="7.3.jpg"><br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/7.4.jpg" srcset="/img/loading.gif" alt="7.4.jpg"><br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/7.5.jpg" srcset="/img/loading.gif" alt="7.5.jpg"><br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/7.6.jpg" srcset="/img/loading.gif" alt="7.6.jpg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;多图预警&lt;br&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/7.1.jpg&quot; srcse
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>如何在你的安卓手机上打造一个爆款个人博客?</title>
    <link href="https://wtrwx.top/20200207/how-to-create-an-explosive-personal-blog-on-your-android-phone.html"/>
    <id>https://wtrwx.top/20200207/how-to-create-an-explosive-personal-blog-on-your-android-phone.html</id>
    <published>2020-02-07T09:07:08.000Z</published>
    <updated>2020-03-30T13:25:24.852Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --><p>哪个男孩不想拥有一个属于自己的爆款博客？<br>Github Page和Hexo到底是如何运行的？<br>我该如何仅用一台安卓手机搭建一个Hexo博客？<br>本文完全由Android设备完成。</p><h3 id="一-准备"><a class="markdownIt-Anchor" href="#一-准备"></a> 一、准备</h3><ol><li>酷安搜索安装<a href="https://www.coolapk.com/apk/com.termux" target="_blank" rel="noopener">Termux</a><br>以下内容最好在科学的上网条件下完成</li><li>执行</li></ol><pre class="highlight"><code>pkg install gitpkg install nodejs-ltsnpm install hexo-cli -gnpm install hexo --save</code></pre><p>在这期间需要输入y确认安装</p><ol start="3"><li><p>注册一个Github账号（Gitee/Coding也可，并且国内访问速度快）</p></li><li><p>创建一个新的仓库仓库的名字必须是 <strong><a href="http://xn--6qqv7i14ofosyrb.github.io" target="_blank" rel="noopener">你的用户名.github.io</a></strong><br>别的不要改</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/6.1.jpg" srcset="/img/loading.gif" alt="6.1.jpg"></p><h3 id="二-本地配置hexo"><a class="markdownIt-Anchor" href="#二-本地配置hexo"></a> 二、本地配置Hexo</h3><ol start="5"><li><p>为了方便你<strong>免ROOT</strong>操作您的博客目录<br><strong>请务必注意以下操作</strong><br>下载我提供的<a href="https://pan.baidu.com/s/14XBLnu6wTeJvgjWCvjPN0Q" target="_blank" rel="noopener">hexo</a></p></li><li><p>采用MT管理器等文件管理器，将下好的zip解压到sd卡任意目录（推荐根目录）。</p></li><li><p>解压好后在Termux中输入</p></li></ol><pre class="highlight"><code>cd /sdcard/bloghexo s</code></pre><p>然后在浏览器中打开http://localhost:4000/测试<br>出现以下界面即为成功。<br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/6.2.jpg" srcset="/img/loading.gif" alt="6.2.jpg"></p><h3 id="三-部署到云端"><a class="markdownIt-Anchor" href="#三-部署到云端"></a> 三、部署到云端</h3><ol start="8"><li>部署到GitHub<br>以此在Termux执行以下命令（Git和ssh二选一）</li></ol><pre class="highlight"><code>git config --global user.name &quot;github用户名&quot;git config --global user.email &quot;注册github的邮箱&quot;git initgit remote add origin git@github.com:github用户名/github用户名.github.io.git</code></pre><ol start="9"><li>安装ssh服务<br><code>pkg install openssh</code></li><li>RSA密钥<br>生成<code>ssh-keygen -t rsa -C &quot;注册Github的邮箱&quot;</code><br>读取<code>cat ~/.ssh/id_rsa.pub</code><br>复制后<br>打开GitHub，右上角设置，找到ssh，将刚刚复制的添加进去。</li><li>用编辑器打开你解压的目录下的_config.yml，在最后添加以下代码</li></ol><pre class="highlight"><code>deploy:     type: git     repo: git@github.com:你的github用户名/你的github用户名.github.io.git     branch: master</code></pre><ol start="12"><li>安装部署<br><code>npm install hexo-deployer-git --save</code></li><li>部署到Github Page<br><code>hexo g -d</code></li></ol><h3 id="四-大功告成"><a class="markdownIt-Anchor" href="#四-大功告成"></a> 四、大功告成</h3><p>恭喜你，到这里就终于完成了，你可以通过</p><blockquote><p><a href="https://xn--eqr924avxo.github.io/" target="_blank" rel="noopener">https://用户名.github.io/</a></p></blockquote><p>访问你的博客。<br>其他例如更换主题、设置文章加密、新建文章的操作都与Windows相同，在这里不再赘述。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;哪个男孩不想拥有一个属于自己的爆款博客？&lt;br&gt;Github Page和Hexo到底是如何运行的？&lt;br&gt;我该如何仅用一台安卓手机搭建一个Hexo博客
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
      <category term="Blog" scheme="https://wtrwx.top/tags/Blog/"/>
    
  </entry>
  
  <entry>
    <title>Page not found</title>
    <link href="https://wtrwx.top/20200207/page-not-found.html"/>
    <id>https://wtrwx.top/20200207/page-not-found.html</id>
    <published>2020-02-07T02:23:47.000Z</published>
    <updated>2020-04-09T14:47:56.536Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --><p>R.I.P<br>李文亮，讲真话的人。<br>他用自己的生命证实了自己的清白，一个人讲了真话，却付出了这样的代价。<br>一名眼科医生，在被警方训诫后冲上了一线。二月一号确诊，五号病危，六号去世。但是在大陆，他活到了七号。<br><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/special.jpg" srcset="/img/loading.gif" alt="special.jpg"><br>愿你的灵魂永安。<br>再一次悼念一位讲真话的人。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:44 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;R.I.P&lt;br&gt;李文亮，讲真话的人。&lt;br&gt;他用自己的生命证实了自己的清白，一个人讲了真话，却付出了这样的代价。&lt;br&gt;一名眼科医生，在被警方训诫后
      
    
    </summary>
    
    
      <category term="日常" scheme="https://wtrwx.top/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>SNP-Crack</title>
    <link href="https://wtrwx.top/20200206/snpcrack.html"/>
    <id>https://wtrwx.top/20200206/snpcrack.html</id>
    <published>2020-02-06T10:17:11.000Z</published>
    <updated>2020-03-30T13:25:24.843Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --><p>写在前面：本文产生的任何损失皆与作者无关！</p><p>本文仅适用于<strong>少年派5.2.2以下</strong>的版本。</p><p>声明：本教程并不包含恢复少年派服务并正常上课的部分，因为其违反了少年派使用协议，这意味着您进行以下操作后将<strong>不能正常上课</strong>，操作前请三思。</p><h5 id="一-准备工作"><a class="markdownIt-Anchor" href="#一-准备工作"></a> 一、准备工作</h5><p>1.一台带无线网卡的win7及以上的电脑<br>2.软件 360随身wifi、fiddler、软件白名单不为空的，书包内有网页的少年派账号<br>3.切换账号bug<br>4.一个修改好包名为白名单内包名，通过AndroidStudio等工具编译的少年派破解专用app<br>5.服务器</p><h5 id="二-破解"><a class="markdownIt-Anchor" href="#二-破解"></a> 二、破解</h5><p>1.利用切换账号bug登入账号。<br>2.进入书包找到一个。<br>3.根据网上教程配置好wifi热点和fiddler。<br>4.将少年派破解专用app上传至服务器。<br>5.打开网页，打开fiddler，断点设置为before requests。</p><p>开启断点，注入以下代码：</p><p><code>&lt;a download=&quot;文件名&quot; href=&quot;文件下载接口地址&quot;&gt;&lt;/a&gt;</code></p><p>取消断点，传回。<br>6.Pad上安装专用app，给予设备管理员权限后选择最后一项清除数据。</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/5.1.jpg" srcset="/img/loading.gif" alt="5.1.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/5.2.jpg" srcset="/img/loading.gif" alt="5.2.jpg"></p><p>7.等待恢复出厂设置完成，enjoy it!</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:47 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;写在前面：本文产生的任何损失皆与作者无关！&lt;/p&gt;&lt;p&gt;本文仅适用于&lt;strong&gt;少年派5.2.2以下&lt;/strong&gt;的版本。&lt;/p&gt;&lt;p&gt;声明：
      
    
    </summary>
    
    
      <category term="Android" scheme="https://wtrwx.top/categories/Android/"/>
    
    
      <category term="Android" scheme="https://wtrwx.top/tags/Android/"/>
    
      <category term="破解" scheme="https://wtrwx.top/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>超纲的高考物理题</title>
    <link href="https://wtrwx.top/20200206/superlevel-college-entrance-examination-physics-questions.html"/>
    <id>https://wtrwx.top/20200206/superlevel-college-entrance-examination-physics-questions.html</id>
    <published>2020-02-06T04:04:30.000Z</published>
    <updated>2020-04-08T13:54:14.483Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --><p>题目：</p><p>如图，一不可伸长的轻质细绳跨过定滑轮后，两端分别悬挂质量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>的物体<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault">A</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.05017em">B</span></span></span></span>.若滑轮有一定大小，质量为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault">m</span></span></span></span>且分布均匀，滑轮转动时与绳之间无相对滑动，不计滑轮与轴之间的摩擦．设细绳对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault">A</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.05017em">B</span></span></span></span>的拉力大小分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>，已知下列四个关于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>的表达式中有一个是正确的，请你根据所学的物理知识，通过一定的分析，判断正确的表达式是( )</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/4.1.jpg" srcset="/img/loading.gif" alt="4.1.jpg"></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi mathvariant="normal">.</mi><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mrow><mo fence="true">(</mo><mi>m</mi><mo>+</mo><mn>2</mn><msub><mi>m</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><msub><mi>m</mi><mn>1</mn></msub><mi>g</mi></mrow><mrow><mi>m</mi><mo>+</mo><mn>2</mn><mrow><mo fence="true">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">A.F_1=\frac{\left(m+2m_2\right)m_1g}{m+2\left(m_1+m_2\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord mathdefault">A</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-.52em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.485em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0"><span class="mtight">(</span></span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0"><span class="mtight">)</span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:.03588em">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.52em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mi mathvariant="normal">.</mi><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mrow><mo fence="true">(</mo><mi>m</mi><mo>+</mo><mn>2</mn><msub><mi>m</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow><msub><mi>m</mi><mn>1</mn></msub><mi>g</mi></mrow><mrow><mi>m</mi><mo>+</mo><mn>4</mn><mrow><mo fence="true">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">B.F_1=\frac{\left(m+2m_1\right)m_1g}{m+4\left(m_1+m_2\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord mathdefault" style="margin-right:.05017em">B</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-.52em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.485em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0"><span class="mtight">(</span></span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0"><span class="mtight">)</span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:.03588em">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.52em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi mathvariant="normal">.</mi><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mrow><mo fence="true">(</mo><mi>m</mi><mo>+</mo><mn>4</mn><msub><mi>m</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><msub><mi>m</mi><mn>1</mn></msub><mi>g</mi></mrow><mrow><mi>m</mi><mo>+</mo><mn>2</mn><mrow><mo fence="true">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">C.F_1=\frac{\left(m+4m_2\right)m_1g}{m+2\left(m_1+m_2\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord mathdefault" style="margin-right:.07153em">C</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-.52em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.485em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0"><span class="mtight">(</span></span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0"><span class="mtight">)</span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:.03588em">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.52em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi mathvariant="normal">.</mi><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mrow><mo fence="true">(</mo><mi>m</mi><mo>+</mo><mn>4</mn><msub><mi>m</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow><msub><mi>m</mi><mn>1</mn></msub><mi>g</mi></mrow><mrow><mi>m</mi><mo>+</mo><mn>4</mn><mrow><mo fence="true">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">D.F_1=\frac{\left(m+4m_1\right)m_1g}{m+4\left(m_1+m_2\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord mathdefault" style="margin-right:.02778em">D</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-.52em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em"><span style="top:-2.655em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0"><span class="mtight">(</span></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0"><span class="mtight">)</span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.485em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0"><span class="mtight">(</span></span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0"><span class="mtight">)</span></span></span><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.31731428571428577em"><span style="top:-2.357em;margin-left:0;margin-right:.07142857142857144em"><span class="pstrut" style="height:2.5em"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.143em"><span></span></span></span></span></span></span><span class="mord mathdefault mtight" style="margin-right:.03588em">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.52em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>解答：</p><p>法一：</p><p>将滑轮视为轻滑轮，质量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">m=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">0</span></span></span></span></p><p>整体分析可得：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mfrac><mrow><msub><mi>m</mi><mn>2</mn></msub><mo>−</mo><msub><mi>m</mi><mn>1</mn></msub></mrow><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub></mrow></mfrac><mi>g</mi></mrow><annotation encoding="application/x-tex">a=\frac{m_2-m_1}{m_1+m_2}g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:2.09633em;vertical-align:-.8360000000000001em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em"><span style="top:-2.3139999999999996em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.8360000000000001em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:.03588em">g</span></span></span></span></span></p><p>隔离A受力分析可得：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mn>2</mn><msub><mi>m</mi><mn>1</mn></msub><msub><mi>m</mi><mn>2</mn></msub></mrow><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub></mrow></mfrac><mi>g</mi></mrow><annotation encoding="application/x-tex">F_1=\frac{2m_1m_2}{m_1+m_2}g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:2.1574400000000002em;vertical-align:-.8360000000000001em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.3139999999999996em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.8360000000000001em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault" style="margin-right:.03588em">g</span></span></span></span></span></p><p>将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">m=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">0</span></span></span></span>依次代入选项，C项符合题意。</p><p>法二：</p><p>设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>=</mo><msub><mi>m</mi><mn>2</mn></msub><mo>=</mo><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">m_1=m_2=m&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.751892em;vertical-align:0"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.751892em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub><mo>=</mo><msub><mi>T</mi><mn>2</mn></msub><mo>=</mo><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup><mi>g</mi></mrow><annotation encoding="application/x-tex">T_1=T_2=m&#x27;g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.946332em;vertical-align:-.19444em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.751892em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:.03588em">g</span></span></span></span></p><p>将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>=</mo><msub><mi>m</mi><mn>2</mn></msub><mo>=</mo><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">m_1=m_2=m&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.751892em;vertical-align:0"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.751892em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>依次代入选项，C项<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mn>1</mn></msub><mo>=</mo><msup><mi>m</mi><mo mathvariant="normal">′</mo></msup><mi>g</mi></mrow><annotation encoding="application/x-tex">T_1=m&#x27;g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.946332em;vertical-align:-.19444em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.751892em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:.03588em">g</span></span></span></span>，符合题意。</p><p>法三：</p><p>分别对物体<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>进行受力分析，根据牛顿第二定律：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>:</mo><msub><mi>T</mi><mn>1</mn></msub><mo>−</mo><msub><mi>m</mi><mn>1</mn></msub><mi>g</mi><mo>=</mo><msub><mi>m</mi><mn>1</mn></msub><mi>a</mi></mrow><annotation encoding="application/x-tex">m_1:T_1-m_1g=m_1a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mord mathdefault">a</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>2</mn></msub><mo>:</mo><mo>−</mo><msub><mi>T</mi><mn>2</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mi>g</mi><mo>=</mo><msub><mi>m</mi><mn>2</mn></msub><mi>a</mi></mrow><annotation encoding="application/x-tex">m_2:-T_2+m_2g=m_2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mord mathdefault">a</span></span></span></span></span></p><p>由转动定律<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mi>I</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">M=I\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.10903em">M</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.07847em">I</span><span class="mord mathdefault" style="margin-right:.05278em">β</span></span></span></span>可得：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>:</mo><mrow><mo fence="true">(</mo><msub><mi>T</mi><mn>2</mn></msub><mo>−</mo><msub><mi>T</mi><mn>1</mn></msub><mo fence="true">)</mo></mrow><mi>R</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>m</mi><msup><mi>R</mi><mn>2</mn></msup><mi>β</mi></mrow><annotation encoding="application/x-tex">m:\left(T_2-T_1\right)R=\frac12mR^2\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">:</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-.25em"></span><span class="minner"><span class="mopen delimcenter" style="top:0">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0">)</span></span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-.686em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord">2</span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.686em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8641079999999999em"><span style="top:-3.113em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:.05278em">β</span></span></span></span></span></p><p>这里需要说明一下，由于转动定律超出高考大纲。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mi>I</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">M=I\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.10903em">M</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.07847em">I</span><span class="mord mathdefault" style="margin-right:.05278em">β</span></span></span></span> 中M代表物体的合力矩，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mi>F</mi><mo>×</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">M=F\times L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.10903em">M</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.76666em;vertical-align:-.08333em"></span><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">×</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault">L</span></span></span></span>。I代表转动惯量，我们可以将定滑轮视为圆盘，圆盘的转动惯量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>m</mi><msup><mi>R</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">I=\frac12mR^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.07847em">I</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8141079999999999em"><span style="top:-3.063em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.05278em">β</span></span></span></span>代表角加速度。</p><p>又有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mi>R</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">a=R\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.43056em;vertical-align:0"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mord mathdefault" style="margin-right:.05278em">β</span></span></span></span></p><p>联立解得：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mrow><mo fence="true">(</mo><mi>m</mi><mo>+</mo><mn>4</mn><msub><mi>m</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow><msub><mi>m</mi><mn>1</mn></msub><mi>g</mi></mrow><mrow><mi>m</mi><mo>+</mo><mn>2</mn><mrow><mo fence="true">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mo fence="true">)</mo></mrow></mrow></mfrac></mrow><annotation encoding="application/x-tex">F_1=\frac{\left(m+4m_2\right)m_1g}{m+2\left(m_1+m_2\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.83333em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.13889em">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.13889em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-.936em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">2</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="minner"><span class="mopen delimcenter" style="top:0">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0">)</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">4</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0">)</span></span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:.03588em">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.936em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>故C项符合题意。</p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;题目：&lt;/p&gt;&lt;p&gt;如图，一不可伸长的轻质细绳跨过定滑轮后，两端分别悬挂质量为&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;kat
      
    
    </summary>
    
    
      <category term="物理竞赛" scheme="https://wtrwx.top/categories/%E7%89%A9%E7%90%86%E7%AB%9E%E8%B5%9B/"/>
    
    
      <category term="物理" scheme="https://wtrwx.top/tags/%E7%89%A9%E7%90%86/"/>
    
      <category term="力学" scheme="https://wtrwx.top/tags/%E5%8A%9B%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>高考方法下的物竞题</title>
    <link href="https://wtrwx.top/20200205/physical-examination-questions-under-the-method-of-college-entrance.html"/>
    <id>https://wtrwx.top/20200205/physical-examination-questions-under-the-method-of-college-entrance.html</id>
    <published>2020-02-05T14:20:17.000Z</published>
    <updated>2020-04-08T13:54:14.489Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --><p>题目：有半径为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>的光滑刚体大圆球固定在水平地面上，试从地面上任意位置，以任意抛射角抛出一石块越过大圆球，问：为达成此目的，抛出石块的最小速度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">v_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span></span></span>是多少？<br>(1)允许接触大圆球。<br>(2)不允许接触大圆球。</p><p>解答：</p><p>(1)根据能量守恒：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>m</mi><msub><mi>v</mi><mn>0</mn></msub><mo>=</mo><mi>m</mi><mi>g</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">\frac12mv_0=mgR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord mathdefault">m</span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span></p><p>解得：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mn>0</mn></msub><mo>=</mo><mn>2</mn><msqrt><mrow><mi>g</mi><mi>R</mi></mrow></msqrt></mrow><annotation encoding="application/x-tex">v_0=2\sqrt{gR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.58056em;vertical-align:-.15em"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-.21055499999999994em"></span><span class="mord">2</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.8294450000000001em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:.833em"><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span><span style="top:-2.789445em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:.853em;height:1.08em"><svg width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.21055499999999994em"><span></span></span></span></span></span></span></span></span></p><p>(2)法一：</p><p>判断两边都相切时，发射速度应当是最小的，以切点的角位置作为参量：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mi>t</mi><mo>=</mo><mi>R</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">v\cos\theta t=R\sin\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mop">cos</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault" style="margin-right:.02778em">θ</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mop">sin</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault" style="margin-right:.02778em">θ</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>sin</mi><mo>⁡</mo><mi>θ</mi><mo>−</mo><mi>g</mi><mi>t</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">v\sin\theta-gt=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.77777em;vertical-align:-.08333em"></span><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mop">sin</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault" style="margin-right:.02778em">θ</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.80952em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">0</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><msub><mi>v</mi><mn>0</mn></msub><mn>2</mn></msup><mo>−</mo><msup><mi>v</mi><mn>2</mn></msup><mo>=</mo><mn>2</mn><mi>g</mi><mi>R</mi><mrow><mo fence="true">(</mo><mn>1</mn><mo>+</mo><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">{v_0}^2-v^2=2gR\left(1+\cos\theta\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-.15em"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8641079999999999em"><span style="top:-3.113em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.8641079999999999em;vertical-align:0"></span><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8641079999999999em"><span style="top:-3.113em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-.25em"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="minner"><span class="mopen delimcenter" style="top:0">(</span><span class="mord">1</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mop">cos</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault" style="margin-right:.02778em">θ</span><span class="mclose delimcenter" style="top:0">)</span></span></span></span></span></span></p><p>联立三式，整理得：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><msub><mi>v</mi><mn>0</mn></msub><mn>2</mn></msup><mo>=</mo><mn>2</mn><mi>g</mi><mi>R</mi><mo>+</mo><mi>g</mi><mi>R</mi><mrow><mo fence="true">(</mo><mn>2</mn><mi>cos</mi><mo>⁡</mo><mi>θ</mi><mo>+</mo><mfrac><mn>1</mn><mrow><mi>cos</mi><mo>⁡</mo><mi>θ</mi></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">{v_0}^2=2gR+gR\left(2\cos\theta+\frac1{\cos\theta}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-.15em"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8641079999999999em"><span style="top:-3.113em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.8777699999999999em;vertical-align:-.19444em"></span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-.95003em"></span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="minner"><span class="mopen delimcenter" style="top:0"><span class="delimsizing size3">(</span></span><span class="mord">2</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mop">cos</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault" style="margin-right:.02778em">θ</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mop">cos</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="mord mathdefault" style="margin-right:.02778em">θ</span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.686em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>利用均值不等式求得：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow><mo fence="true">(</mo><msub><mi>v</mi><mn>0</mn></msub><mo fence="true">)</mo></mrow><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><msqrt><mrow><mn>2</mn><mi>g</mi><mi>R</mi><mrow><mo fence="true">(</mo><msqrt><mn>2</mn></msqrt><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow></mrow></msqrt></mrow><annotation encoding="application/x-tex">{\left(v_0\right)}_{min}=\sqrt{2gR\left(\sqrt2+1\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-.29969999999999997em"></span><span class="mord"><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0">)</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.161964em"><span style="top:-2.4003em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.29969999999999997em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-.8561350000000001em"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5838649999999999em"><span class="svg-align" style="top:-4.4em"><span class="pstrut" style="height:4.4em"></span><span class="mord" style="padding-left:1em"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="minner"><span class="mopen delimcenter" style="top:0"><span class="delimsizing size2">(</span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.956095em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:.833em">2</span></span><span style="top:-2.916095em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:.853em;height:1.08em"><svg width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.08390500000000001em"><span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-3.5438650000000003em"><span class="pstrut" style="height:4.4em"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em"><svg width="400em" height="2.48em" viewBox="0 0 400000 2592" preserveAspectRatio="xMinYMin slice"><path d="M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.8561350000000001em"><span></span></span></span></span></span></span></span></span></span></p><p>法二：</p><p>如图，建立平面直角坐标系</p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/3.1.jpg" srcset="/img/loading.gif" alt="3.1.jpg"></p><p>求抛物线解析式：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mi>h</mi><mo>−</mo><mn>2</mn><mfrac><mi>g</mi><mrow><mn>2</mn><msubsup><mi>v</mi><mn>0</mn><mn>2</mn></msubsup></mrow></mfrac><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">y=h-2\frac g{2v_0^2}x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.77777em;vertical-align:-.08333em"></span><span class="mord mathdefault">h</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:2.059868em;vertical-align:-.9523079999999999em"></span><span class="mord">2</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em"><span style="top:-2.314em"><span class="pstrut" style="height:3em"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.7959080000000001em"><span style="top:-2.433692em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.0448000000000004em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.26630799999999993em"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:.04em"></span></span><span style="top:-3.677em"><span class="pstrut" style="height:3em"></span><span class="mord mathdefault" style="margin-right:.03588em">g</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.9523079999999999em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:.8641079999999999em"><span style="top:-3.113em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>∵抛物线与圆相切</p><p>∴方程<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>=</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">x+y=R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.66666em;vertical-align:-.08333em"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:.625em;vertical-align:-.19444em"></span><span class="mord mathdefault" style="margin-right:.03588em">y</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.68333em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.00773em">R</span></span></span></span>有且仅有一根</p><p>令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\delta=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:.69444em;vertical-align:0"></span><span class="mord mathdefault" style="margin-right:.03785em">δ</span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:.64444em;vertical-align:0"></span><span class="mord">0</span></span></span></span></p><p>解得：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mrow><mo fence="true">(</mo><msub><mi>v</mi><mn>0</mn></msub><mo fence="true">)</mo></mrow><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><msqrt><mrow><mn>2</mn><mi>g</mi><mi>R</mi><mrow><mo fence="true">(</mo><msqrt><mn>2</mn></msqrt><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow></mrow></msqrt></mrow><annotation encoding="application/x-tex">{\left(v_0\right)}_{min}=\sqrt{2gR\left(\sqrt2+1\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-.29969999999999997em"></span><span class="mord"><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:.03588em">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:-.03588em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.15em"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0">)</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.161964em"><span style="top:-2.4003em;margin-right:.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.29969999999999997em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-.8561350000000001em"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5838649999999999em"><span class="svg-align" style="top:-4.4em"><span class="pstrut" style="height:4.4em"></span><span class="mord" style="padding-left:1em"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:.03588em">g</span><span class="mord mathdefault" style="margin-right:.00773em">R</span><span class="mspace" style="margin-right:.16666666666666666em"></span><span class="minner"><span class="mopen delimcenter" style="top:0"><span class="delimsizing size2">(</span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:.956095em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:.833em">2</span></span><span style="top:-2.916095em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:.853em;height:1.08em"><svg width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.08390500000000001em"><span></span></span></span></span></span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mbin">+</span><span class="mspace" style="margin-right:.2222222222222222em"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-3.5438650000000003em"><span class="pstrut" style="height:4.4em"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em"><svg width="400em" height="2.48em" viewBox="0 0 400000 2592" preserveAspectRatio="xMinYMin slice"><path d="M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80H400000v40H1014z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:.8561350000000001em"><span></span></span></span></span></span></span></span></span></span></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;题目：有半径为&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math&gt;&lt;semantics&gt;&lt;mro
      
    
    </summary>
    
    
      <category term="物理竞赛" scheme="https://wtrwx.top/categories/%E7%89%A9%E7%90%86%E7%AB%9E%E8%B5%9B/"/>
    
    
      <category term="物理" scheme="https://wtrwx.top/tags/%E7%89%A9%E7%90%86/"/>
    
      <category term="力学" scheme="https://wtrwx.top/tags/%E5%8A%9B%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Hello World！</title>
    <link href="https://wtrwx.top/20200204/hello-world.html"/>
    <id>https://wtrwx.top/20200204/hello-world.html</id>
    <published>2020-02-04T10:50:06.000Z</published>
    <updated>2020-04-10T06:15:49.741Z</updated>
    
    <content type="html"><![CDATA[<!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --><p>欢迎来到维他入我心的博客，这里将记录一些有趣的生活日常。如果您想要联系我，请查看关于界面。</p><p>您可以下载<a href="https://cdn.jsdelivr.net/gh/Wtrwx/wtrwxIMG/blog.apk" target="_blank" rel="noopener">AndroidApp</a>或使用<a href="/atom.xml">RSS</a>阅读器，快速查看本博客的内容。</p><p>本站APP已在<a href="https://github.com/Wtrwx/WtrwxFluidApp" target="_blank" rel="noopener">Github</a>托管代码。</p><h5 id="开源相关"><a class="markdownIt-Anchor" href="#开源相关"></a> 开源相关：</h5><p>1.<a href="https://developer.android.com/topic/libraries/support-library/androidx-rn" target="_blank" rel="noopener">AndroidX</a></p><p>2.<a href="https://jsoup.org/" target="_blank" rel="noopener">jsoup</a></p><p>3.<a href="https://github.com/krossovochkin/BottomSheetMenu" target="_blank" rel="noopener">BottomSheetMenu</a></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/app-1.jpg" srcset="/img/loading.gif" alt="app-1.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/wtrwx/wtrwxIMG/app-2.jpg" srcset="/img/loading.gif" alt="app-2.jpg"></p><!-- rebuild by neat -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- build time:Sun May 10 2020 17:33:45 GMT+0800 (中国标准时间) --&gt;&lt;p&gt;欢迎来到维他入我心的博客，这里将记录一些有趣的生活日常。如果您想要联系我，请查看关于界面。&lt;/p&gt;&lt;p&gt;您可以下载&lt;a href=&quot;https://c
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
